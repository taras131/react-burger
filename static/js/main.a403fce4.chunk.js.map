{"version":3,"sources":["components/modal-overlay/modal-overlay.module.css","components/preloader/preloader.module.css","components/error-message/error-message.module.css","components/app/app.module.css","pages/main/main.module.css","components/ingredients-list/ingredients-list.module.css","pages/ingredients/ingredients.module.css","components/price-with-icon/price-with-icon.module.css","pages/feed-order-details/feed-order-details.module.css","components/app-header/app-header.module.css","utils/const.ts","components/app-header/app-header.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/done.gif","http/index.ts","services/actions/cart-action-creators.ts","services/reducers/cart-slice.ts","hooks/redux.ts","components/order-details/order-details.tsx","services/selectors/cart-selectors.ts","images/spinner.gif","components/preloader/preloader.tsx","images/antenna.png","components/error-message/error-message.tsx","services/actions/ingredients-action-creators.ts","services/selectors/ingredients-selectors.ts","images/black-hole.jpg","pages/not-found-page/not-found-page.tsx","images/empty-cart.png","components/constructor-empty/constructor-empty.tsx","utils/service.ts","components/constructor-not-bun-ingredient/constructor-not-bun-ingredient.tsx","services/selectors/auth-selectors.ts","components/burger-constructor/burger-constructor.tsx","components/ingredient-card/ingredient-card.tsx","components/ingredients-list/ingredients-list.tsx","components/burger-ingredients/burger-ingredients.tsx","pages/main/main.tsx","components/ingredient-info/ingredient-info.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredients/ingredients.tsx","services/actions/auth-action-creators.ts","services/reducers/auth-slice.ts","components/auth-error/auth-error.tsx","pages/reset-password/reset-password.tsx","pages/forgot-password/forgot-password.tsx","pages/profile/profile.tsx","pages/auth/auth.tsx","pages/profile-info/profile-info.tsx","services/selectors/order-selector.ts","components/price-with-icon/price-with-icon.tsx","components/image-circle-ingredient/image-circle-ingredient.tsx","components/feed-order-item/feed-order-item.tsx","services/actions/order-action-creators.ts","pages/orders/orders.tsx","components/hoc/protected-unauthorized-route.tsx","components/hoc/protected-authorized-route.tsx","pages/feed/feed.tsx","components/ingredient-item-in-order-info/ingredient-item-in-order-info.tsx","components/order-info/order-info.tsx","services/reducers/order-slice.ts","pages/feed-order-details/feed-order-details.tsx","components/app/app.tsx","reportWebVitals.ts","services/reducers/ingredients-slice.ts","services/middleware/orders-middleware.ts","services/store.ts","index.tsx","pages/feed/feed.module.css","pages/profile/profile.module.css","components/burger-constructor/burger-constructor.module.css","pages/forgot-password/forgot-password.module.css","components/ingredient-info/ingredient-info.module.css","components/order-info/order-info.module.css","components/ingredient-card/ingredient-card.module.css","pages/auth/auth.module.css","components/feed-order-item/feed-order-item.module.css","pages/profile-info/profile-info.module.css","components/order-details/order-details.module.css","components/modal/modal.module.css","pages/not-found-page/not-found-page.module.css","components/burger-ingredients/burger-ingredients.module.css","components/constructor-empty/constructor-empty.module.css","components/constructor-not-bun-ingredient/constructor-not-bun-ingredient.module.css","components/auth-error/autch-error.module.css","pages/orders/orders.module.css","components/image-circle-ingredient/image-circle-ingredient.module.css","components/ingredient-item-in-order-info/ingredient-item-in-order-info.module.css"],"names":["module","exports","SERVER_ERROR_MESSAGE","BEARER_TOKEN_HEADER","ROUTE_MAIN","ROUTE_LOGIN","ROUTE_REGISTER","ROUTE_FORGOT_PASSWORD","ROUTE_RESET_PASSWORD","ROUTE_PROFILE","ROUTE_INGREDIENTS","ROUTE_ORDERS","ROUTE_FEED","START_ORDERS_LISTENING","STOP_ORDERS_LISTENING","AppHeader","pathname","useLocation","className","appHeaderStyles","wrapper","content","menu","menu_item","classNames","link","active","includes","to","type","logo_section","auth_section","ModalOverlay","closeModal","overlayStyles","onClick","e","stopPropagation","modalRoot","document","getElementById","Modal","title","children","onKeyDown","useCallback","key","useEffect","addEventListener","removeEventListener","ReactDOM","createPortal","modalStyles","close_section","AUTH_API","ACCESS_TOKEN","REFRESH_TOKEN","setLocalStorage","decodedResponse","localStorage","setItem","accessToken","split","refreshToken","api","getRefreshToken","getItem","getAccessToken","getAllIngredients","a","fetch","process","res","ok","json","data","Error","createNewOrder","cart","method","headers","Authorization","body","JSON","stringify","ingredients","reverse","order","message","updateToken","register","user","login","forgotPassword","email","success","resetPassword","password","token","checkAuth","mode","cache","credentials","redirect","referrerPolicy","LogOut","removeItem","updateUser","console","log","getOrderInfo","orderNumber","orders","fetchCreateOrder","createAsyncThunk","ThunkAPI","cartId","map","item","_id","response","number","rejectWithValue","CartSlice","createSlice","name","initialState","isLoading","errorMessage","isShowOrderDetails","reducers","addToCart","state","action","payload","filter","arr","concat","removeFromCart","closeOrderDetailModal","moveConstructorItem","hover","drag","extraReducers","fulfilled","pending","rejected","actions","useAppSelector","useSelector","useAppDispatch","useDispatch","OrderDetails","dispatch","getOrderNumber","detailsStyles","order_number","done_section","src","done","alt","style","color","Preloader","preloaderStyles","spinner","ErrorMessage","errorStyles","antenna","fetchIngredients","_","getIngredientsByType","getIngredientById","id","getAmountByIngredientsId","amount","forEach","price","getPriceById","NotFoundPage","notFoundPageStyles","black_hole","blackHole","description","ConstructorEmpty","emptyStyles","emptyCart","validationName","length","validationPassword","validateEmail","String","toLowerCase","match","getDate","orderCreateData","whatDay","orderCreateTime","slice","currentDate","Date","createDate","diffInTime","getTime","diffInDays","Math","round","digit","lastFigure","lastDigitToWord","convertStatusOrderFromRussian","status","ConstructorNotBunIngredient","ingredient","index","ref","useRef","onRemoveItemClick","useDrag","collect","monitor","isDragging","useDrop","accept","canDrop","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","fillingStyles","filling_item","text","thumbnail","image_mobile","handleClose","getAuthIsLoading","auth","getIsAuth","isAuth","getCanResetPassword","canResetPassword","BurgerConstructor","getCart","bunInCart","getBunInCart","notBunIngredients","getNotBunIngredients","totalSum","reduce","sum","cur","getTotalSum","navigate","useNavigate","onCreateOrderClick","valueOf","constructorItems","constructorStyles","order_wrapper","order_item","isLocked","order_items","create_order_section","icon_section","size","disabled","IngredientCard","location","count","getCountInCartById","cardStyle","dragging","from","backgroundLocation","image_section","image","price_section","count_section","IngredientsList","React","forwardRef","ingredientCardList","listStyle","categories","BurgerIngredients","useState","activeCategory","setActiveCategory","refBun","refSauce","refMain","buns","sauces","mains","onTabClick","value","scrollIntoView","behavior","selectBlock","burgerIngredientsStyle","display","justifyContent","ingredients_wrapper","onScroll","bunBorderTopY","abs","sauceBorderTopY","mainBorderTopY","currentCategory","Main","mainStyle","DndProvider","backend","HTML5Backend","IngredientInfo","currentIngredient","ingredientInfoStyles","container","img_section","image_large","details_section","details_item","calories","proteins","fat","carbohydrates","IngredientDetails","Ingredients","useParams","isShowIngredientDetails","setIsShowIngredientDetails","ingredientsStyles","handlerError","fetchRegister","fetchLogin","fetchForgotPassword","fetchResetPassword","fetchCheckAuth","fetchLogOut","fetchUpdateUser","AuthSlice","removeError","AuthError","authErrorMessage","getAuthErrorMessage","timeOut","setTimeout","clearTimeout","authErrorStyles","show","ResetPassword","isAuthLoading","inputsValues","setInputsValues","passwordError","setPasswordError","onDataChange","target","onSubmit","preventDefault","forgotStyles","placeholder","onChange","error","errorText","icon","hint","ForgotPassword","setEmail","setError","emailError","Profile","profileStyles","navigation","Auth","prevPath","errors","setErrors","isRegister","nameError","loginStyles","ProfileInfo","getUser","isDataChange","setIsDataChange","profileInfoStyles","input_section","button_section","cancel_button","getOrders","getOrderIsLoading","PriceWithIcon","priceWithIconStyles","ImageCircleIngredient","ingredientCount","zIndex","imageCircleIngredientStyles","count_container","FeedOrderItem","createdAt","images","ingredientImage","push","getMobileImagesById","imagesList","feedOrderItemStyles","order_header","order_name","order_description","ingredients_images","startOrdersListening","url","stopOrdersListening","fetchOrderInfo","Orders","ordersList","ordersStyles","ProtectedUnauthorizedRoute","ProtectedAuthorizedRoute","Feed","getOrderError","inProgress","numbers","getNumbersOrdersInProcess","isReady","getNumbersReadyOrders","totalOrders","total","getTotal","totalTodayOrders","totalToday","getTotalToday","feedStyles","orders_container","orders_items","orders_info","orders_tab","orders_number_list","completed_order","IngredientItemInOrderInfo","ingredientId","orderId","countInOrder","currentOrder","getCountIngredientsInCurrentOrder","ingredientItemInOrderInfoStyles","OrderInfo","Set","ingredientsList","Array","orderInfoStyles","footer","OrderSlice","isWsConnecting","startConnecting","stopConnecting","setOrders","cleanOrders","orderActions","FeedOrderDetails","params","getCurrentNumber","feedOrderDetailsStyles","App","getIsShowOrderDetails","isIngredientsLoading","getIsIngredientsLoading","isCartLoading","getIsCartLoading","ingredientsErrorMessage","getIngredientsErrorMessage","cartErrorMessage","getCartErrorMessage","appStyles","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","IngredientsSlice","ordersMiddleware","store","ws","onOpen","onClose","next","close","WebSocket","onopen","onmessage","event","parse","onclose","onerror","rootReducer","combineReducers","ingredientsReducer","cartReducer","AuthReducer","OrderReducer","require","config","render","StrictMode","basename","configureStore","reducer","middleware","getDefaultMiddleware"],"mappings":"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","file":"static/js/main.a403fce4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"modal-overlay_wrapper__1cyki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"preloader_wrapper__2wc58\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"error-message_wrapper__1bGgz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app_wrapper__2Q97U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"main_wrapper__V9Zlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ingredients-list_wrapper__3E8ce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ingredients_wrapper__2kJU9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"price-with-icon_wrapper__2Yaka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"feed-order-details_wrapper__2Pc5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app-header_wrapper__2OJDw\",\"content\":\"app-header_content__1V7kp\",\"menu\":\"app-header_menu__32PY-\",\"logo_section\":\"app-header_logo_section__2odzx\",\"auth_section\":\"app-header_auth_section__27iPE\",\"link\":\"app-header_link__J7RIi\",\"active\":\"app-header_active__1-q7e\",\"menu_item\":\"app-header_menu_item__2NZqG\"};","export const CONNECT_ERROR_MESSAGE = 'Произошёл обрыв связи с сервером'\r\nexport const SERVER_ERROR_MESSAGE = 'Произошла ошибка в работе сервера'\r\nexport const BEARER_TOKEN_HEADER =  'Bearer '\r\nexport const ROUTE_MAIN = '/'\r\nexport const ROUTE_LOGIN = '/login'\r\nexport const ROUTE_REGISTER = '/register'\r\nexport const ROUTE_FORGOT_PASSWORD = '/forgot-password'\r\nexport const ROUTE_RESET_PASSWORD = '/reset-password'\r\nexport const ROUTE_PROFILE = '/profile'\r\nexport const ROUTE_INGREDIENTS = '/ingredients'\r\nexport const ROUTE_ORDERS = 'orders'\r\nexport const ROUTE_FEED = '/feed'\r\nexport const ACCESS_TOKEN = 'accessToken'\r\nexport const START_ORDERS_LISTENING = 'START_ORDERS_LISTENING'\r\nexport const STOP_ORDERS_LISTENING = 'STOP_ORDERS_LISTENING'\r\nexport const WS_ALL_ORDERS = 'wss://norma.nomoreparties.space/orders/all'\r\nexport const WS_USER_ORDERS = 'wss://norma.nomoreparties.space/orders'","import React, {FC} from 'react';\r\nimport appHeaderStyles from './app-header.module.css'\r\nimport {BurgerIcon, ListIcon, Logo, ProfileIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport {ROUTE_FEED, ROUTE_INGREDIENTS, ROUTE_MAIN, ROUTE_PROFILE} from \"../../utils/const\";\r\nimport classNames from \"classnames\";\r\n\r\nconst AppHeader: FC = () => {\r\n    const {pathname} = useLocation()\r\n    return (\r\n        <header className={appHeaderStyles.wrapper}>\r\n            <div className={appHeaderStyles.content}>\r\n                <nav>\r\n                    <ul className={appHeaderStyles.menu}>\r\n                        <li className={appHeaderStyles.menu_item}>\r\n                            <Link className={classNames(appHeaderStyles.link, {\r\n                                [appHeaderStyles.active]: pathname === ROUTE_MAIN || pathname.includes(ROUTE_INGREDIENTS)\r\n                            })} to={ROUTE_MAIN}>\r\n                                <BurgerIcon type={pathname === ROUTE_MAIN || pathname.includes(ROUTE_INGREDIENTS)\r\n                                    ? \"primary\" : \"secondary\"}/>\r\n                                <p className=\"text text_type_main-default ml-2\">Конструктор</p>\r\n                            </Link>\r\n                        </li>\r\n                        <li className={appHeaderStyles.menu_item}>\r\n                            <Link className={classNames(appHeaderStyles.link, {\r\n                                [appHeaderStyles.active]: pathname === '/not_found'\r\n                            })} to={ROUTE_FEED}>\r\n                                <ListIcon type={pathname.includes(ROUTE_FEED) ? \"primary\" : \"secondary\"}/>\r\n                                <p className=\"text text_type_main-default ml-2\">\r\n                                    Лента заказов\r\n                                </p>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n                <section className={appHeaderStyles.logo_section}>\r\n                    <Link to={ROUTE_MAIN}>\r\n                        <Logo/>\r\n                    </Link>\r\n                </section>\r\n                <section className={appHeaderStyles.auth_section}>\r\n                    <Link className={classNames(appHeaderStyles.link, {\r\n                        [appHeaderStyles.active]: pathname.includes(ROUTE_PROFILE)\r\n                    })} to={ROUTE_PROFILE}>\r\n                        <ProfileIcon type={pathname.includes(ROUTE_PROFILE) ? \"primary\" : \"secondary\"}/>\r\n                        <p className=\"text text_type_main-default ml-2\">Личный кабинет</p>\r\n                    </Link>\r\n                </section>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import React, {FC} from 'react';\r\nimport overlayStyles from './modal-overlay.module.css';\r\n\r\ntype TModalOverlay = {\r\n    closeModal: () => void\r\n}\r\nconst ModalOverlay: FC<TModalOverlay> = ({closeModal}) => {\r\n    const closeClick = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.stopPropagation()\r\n        closeModal()\r\n    }\r\n    return (\r\n        <div className={overlayStyles.wrapper}\r\n             onClick={closeClick}>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalOverlay;","import React, {FC, useCallback, useEffect} from 'react';\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\nimport modalStyles from \"./modal.module.css\"\r\nimport {CloseIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport ReactDOM from 'react-dom'\r\n\r\ntype TModal = {\r\n    title?: string,\r\n    closeModal: () => void\r\n}\r\nconst modalRoot = document.getElementById(\"react-modals\");\r\nconst Modal: FC<TModal> = ({title = '', closeModal, children}) => {\r\n    const onKeyDown = useCallback(({key}) => {\r\n        if (key === 'Escape') closeModal()\r\n    }, [closeModal])\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', onKeyDown)\r\n        return () => document.removeEventListener('keydown', onKeyDown)\r\n    }, [onKeyDown])\r\n    if (!modalRoot) return (<div></div>)\r\n    return ReactDOM.createPortal(\r\n        <>\r\n            <div className={modalStyles.content + \" pt-30\"}\r\n                 onClick={(e) => e.stopPropagation()}>\r\n                <p className={modalStyles.title + \" text text_type_main-large\"}>{title}</p>\r\n                <span className={modalStyles.close_section} onClick={closeModal}>\r\n                    <CloseIcon type=\"primary\"/>\r\n                </span>\r\n                {children}\r\n            </div>\r\n            <ModalOverlay closeModal={closeModal}/>\r\n        </>, modalRoot)\r\n};\r\n\r\nexport default Modal;\r\n\r\n","export default __webpack_public_path__ + \"static/media/done.cc5a59a7.gif\";","import {BEARER_TOKEN_HEADER, SERVER_ERROR_MESSAGE} from \"../utils/const\";\r\nimport {IOrder} from \"../models/i-order.types\";\r\nimport {IIngredient} from \"../models/i-ingredient.types\";\r\nimport {IRegistrationData, TLoginData, TResetPassword} from \"../services/actions/auth-action-creators\";\r\nimport {IUserTypes} from \"../models/i-user.types\";\r\n\r\nconst INGREDIENTS_API = '/ingredients'\r\nconst ORDERS_API = '/orders'\r\nconst REGISTER_API = '/auth/register'\r\nconst LOGIN_API = '/auth/login'\r\nconst PASSWORD_FORGOT_API = '/password-reset'\r\nconst PASSWORD_RESET_API = '/password-reset/reset'\r\nconst AUTH_API = '/auth/user'\r\nconst LOGOUT_API = '/auth/logout'\r\nconst UPDATE_TOKEN_API = '/auth/token'\r\nconst ACCESS_TOKEN = 'accessToken'\r\nconst REFRESH_TOKEN = 'refreshToken'\r\n\r\ntype TDecodedAuthResponse = {\r\n    accessToken: string\r\n    refreshToken: string\r\n    success: boolean\r\n    user: IUserTypes\r\n}\r\nconst setLocalStorage = (decodedResponse: TDecodedAuthResponse) => {\r\n    localStorage.setItem(ACCESS_TOKEN, decodedResponse.accessToken.split(' ')[1])\r\n    localStorage.setItem(REFRESH_TOKEN, decodedResponse.refreshToken)\r\n}\r\nconst cleanLocalStorage = () => {\r\n    localStorage.removeItem(REFRESH_TOKEN)\r\n    localStorage.removeItem(ACCESS_TOKEN)\r\n}\r\nclass Api {\r\n    getRefreshToken = () => {\r\n        return localStorage.getItem(REFRESH_TOKEN)\r\n    }\r\n    getAccessToken = () => {\r\n        return localStorage.getItem(ACCESS_TOKEN)\r\n    }\r\n\r\n    getAllIngredients = async (): Promise<Array<IIngredient>> => {\r\n        const res = await fetch(process.env.REACT_APP_API_URL + INGREDIENTS_API)\r\n        if (res.ok) {\r\n            const decodedResponse = await res.json()\r\n            return decodedResponse.data\r\n        }\r\n        throw new Error(SERVER_ERROR_MESSAGE)\r\n    }\r\n    // над тем что бы сделать метод checkResponse я думал, но не получилось , потому что все методы\r\n    // возвращают разные поля (decodedResponse.order, decodedResponse.user и т.д.)\r\n    // делал так , что бы типизировать промисы - Promise<IOrder>\r\n    // не смог решить , как сделать оптимально\r\n    createNewOrder = async (cart: Array<string>): Promise<IOrder> => {\r\n        const res = await fetch(process.env.REACT_APP_API_URL + ORDERS_API, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                Authorization: BEARER_TOKEN_HEADER + this.getAccessToken()\r\n            },\r\n            body: JSON.stringify({ingredients: cart.reverse()})\r\n        })\r\n        const decodedResponse = await res.json()\r\n        if (res.ok) {\r\n            return decodedResponse.order\r\n        }\r\n        if (decodedResponse.message === 'jwt expired') {\r\n            await this.updateToken()\r\n            return await this.createNewOrder(cart)\r\n        } else {\r\n            throw new Error(SERVER_ERROR_MESSAGE)\r\n        }\r\n    }\r\n\r\n    register = async (user: IRegistrationData): Promise<IUserTypes> => {\r\n        const res = await fetch(process.env.REACT_APP_API_URL + REGISTER_API, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(user)\r\n        })\r\n        const decodedResponse = await res.json()\r\n        if (res.ok) {\r\n            setLocalStorage(decodedResponse)\r\n            return decodedResponse.user\r\n        }\r\n        throw new Error(decodedResponse.message)\r\n    }\r\n\r\n    login = async (user: TLoginData): Promise<IUserTypes> => {\r\n        const res = await fetch(process.env.REACT_APP_API_URL + LOGIN_API, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(user)\r\n        })\r\n        const decodedResponse = await res.json()\r\n        if (res.ok) {\r\n            setLocalStorage(decodedResponse)\r\n            return decodedResponse.user\r\n        }\r\n        throw new Error(decodedResponse.message)\r\n\r\n    }\r\n\r\n    forgotPassword = async (email: string) => {\r\n        const res = await fetch(process.env.REACT_APP_API_URL + PASSWORD_FORGOT_API, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify({email: email})\r\n        })\r\n        const decodedResponse = await res.json()\r\n        if (res.ok && decodedResponse.success) {\r\n            return decodedResponse\r\n        }\r\n        throw new Error(decodedResponse.message)\r\n    }\r\n\r\n    resetPassword = async (data: TResetPassword) => {\r\n        const res = await fetch(process.env.REACT_APP_API_URL + PASSWORD_RESET_API, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify({password: data.password, token: data.key})\r\n        })\r\n        const decodedResponse = await res.json()\r\n        if (res.ok) {\r\n            return decodedResponse.user\r\n        }\r\n        throw new Error(decodedResponse.message)\r\n    }\r\n\r\n    checkAuth = async (): Promise<IUserTypes> => {\r\n        if (this.getAccessToken()) {\r\n            const res = await fetch(process.env.REACT_APP_API_URL + AUTH_API, {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: BEARER_TOKEN_HEADER + this.getAccessToken()\r\n                },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer'\r\n            })\r\n            const decodedResponse = await res.json()\r\n            if (res.ok) {\r\n                return decodedResponse.user\r\n            }\r\n            if (decodedResponse.message === 'jwt expired' && this.getRefreshToken()) {\r\n                await this.updateToken()\r\n                return await this.checkAuth()\r\n            }\r\n            throw new Error(decodedResponse.message)\r\n        }\r\n        throw new Error()\r\n    }\r\n\r\n    LogOut = async () => {\r\n        const res = await fetch(process.env.REACT_APP_API_URL + LOGOUT_API, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({token: this.getRefreshToken()})\r\n        })\r\n        const decodedResponse = await res.json()\r\n        if (res.ok) {\r\n            cleanLocalStorage()\r\n            return decodedResponse\r\n        }\r\n        throw new Error(decodedResponse.message)\r\n    }\r\n\r\n    updateUser = async (user: IRegistrationData): Promise<IUserTypes> => {\r\n        const res = await fetch(process.env.REACT_APP_API_URL + AUTH_API, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: BEARER_TOKEN_HEADER + this.getAccessToken()\r\n            },\r\n            body: JSON.stringify(user)\r\n        })\r\n        const decodedResponse = await res.json()\r\n        if (res.ok) {\r\n            return decodedResponse\r\n        }\r\n        if (decodedResponse.message === 'jwt expired') {\r\n            await this.updateToken()\r\n            return await this.updateUser(user)\r\n        } else {\r\n            throw new Error(decodedResponse.message)\r\n        }\r\n    }\r\n\r\n    updateToken = async () => {\r\n        console.log(\"updateToken\")\r\n        if (this.getRefreshToken()) {\r\n            const res = await fetch(process.env.REACT_APP_API_URL + UPDATE_TOKEN_API, {\r\n                    method: 'post',\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({token: this.getRefreshToken()})\r\n                }\r\n            )\r\n            if (res.ok) {\r\n                const decodedResponse = await res.json()\r\n                if (decodedResponse.success) {\r\n                    setLocalStorage(decodedResponse)\r\n                } else {\r\n                    throw new Error(SERVER_ERROR_MESSAGE)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getOrderInfo = async (orderNumber: number): Promise<IOrder> => {\r\n        const res = await fetch(process.env.REACT_APP_API_URL + ORDERS_API + \"/\" + orderNumber)\r\n        const decodedResponse = await res.json()\r\n        if (res.ok) return decodedResponse.orders[0]\r\n        throw new Error(decodedResponse.message)\r\n    }\r\n}\r\n\r\nconst api = new Api();\r\n\r\nexport default api;\r\n\r\n","import {createAsyncThunk} from '@reduxjs/toolkit';\r\nimport {IIngredient} from '../../models/i-ingredient.types';\r\nimport api from \"../../http\";\r\n\r\nexport const fetchCreateOrder = createAsyncThunk(\r\n    'fetch_create_order',\r\n    async (cart: IIngredient[], ThunkAPI) => {\r\n        try {\r\n            const cartId = cart.map((item) => item._id);\r\n            const response = await api.createNewOrder(cartId);\r\n            return response.number;\r\n        } catch (e) {\r\n            return ThunkAPI.rejectWithValue('Не удалось создать заказ');\r\n        }\r\n    },\r\n);\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {fetchCreateOrder} from '../actions/cart-action-creators';\r\nimport {ICartTypes, IOrderNumber} from \"../../models/i-cart.types\";\r\n\r\n\r\ninterface CartState {\r\n  isLoading: boolean;\r\n  errorMessage: string;\r\n  isShowOrderDetails: boolean;\r\n  ingredients: ICartTypes[] | [];\r\n  order: IOrderNumber;\r\n}\r\n\r\ninterface IKeys {\r\n  hover: number;\r\n  drag: number;\r\n}\r\n\r\nexport const initialState: CartState = {\r\n  isLoading: false,\r\n  errorMessage: '',\r\n  isShowOrderDetails: false,\r\n  ingredients: [],\r\n  order: {\r\n    number: '',\r\n  },\r\n};\r\n\r\nexport const CartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action: PayloadAction<ICartTypes>) => {\r\n      if (action.payload.type === 'bun') {\r\n          state.ingredients = [...state.ingredients.filter(item => item.type !== 'bun'), action.payload];\r\n      } else {\r\n          const arr: ICartTypes[] = [action.payload]\r\n          state.ingredients = arr.concat(state.ingredients);\r\n      }\r\n    },\r\n    removeFromCart: (state, action: PayloadAction<number>) => {\r\n      state.ingredients = state.ingredients.filter((item) => item.key !== action.payload);\r\n    },\r\n    closeOrderDetailModal: (state) => {\r\n      state.isShowOrderDetails = false;\r\n    },\r\n    moveConstructorItem: (state, action: PayloadAction<IKeys>) => {\r\n      [state.ingredients[action.payload.drag], state.ingredients[action.payload.hover]] = [\r\n        state.ingredients[action.payload.hover],\r\n        state.ingredients[action.payload.drag],\r\n      ];\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchCreateOrder.fulfilled.type]: (state, action: PayloadAction<string>) => {\r\n      state.order.number = action.payload;\r\n      state.isShowOrderDetails = true;\r\n      state.ingredients = [];\r\n      state.isLoading = false;\r\n    },\r\n    [fetchCreateOrder.pending.type]: (state) => {\r\n      state.isLoading = true;\r\n      state.errorMessage = '';\r\n    },\r\n    [fetchCreateOrder.rejected.type]: (state, action: PayloadAction<string>) => {\r\n      state.order.number = '';\r\n      state.isLoading = false;\r\n      state.errorMessage = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {addToCart, removeFromCart, closeOrderDetailModal, moveConstructorItem} =\r\n  CartSlice.actions;\r\nexport default CartSlice.reducer;\r\n","import {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\r\nimport {AppDispatch, RootState} from '../services/store';\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\n\r\n","import React, {FC} from 'react';\r\nimport detailsStyles from './order-details.module.css'\r\nimport Modal from \"../modal/modal\";\r\nimport done from \"../../images/done.gif\";\r\nimport {getOrderNumber} from \"../../services/selectors/cart-selectors\";\r\nimport {closeOrderDetailModal} from '../../services/reducers/cart-slice'\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\r\n\r\nconst OrderDetails: FC = () => {\r\n    const dispatch = useAppDispatch()\r\n    const closeModal = () => {\r\n        dispatch(closeOrderDetailModal())\r\n    }\r\n    const orderNumber = useAppSelector(state => getOrderNumber(state))\r\n    return (\r\n        <Modal closeModal={closeModal}>\r\n            <div className={detailsStyles.wrapper}>\r\n                <section className={detailsStyles.order_number}>\r\n                    <p className=\"text text_type_digits-large\">{orderNumber}</p>\r\n                </section>\r\n                <h3 className=\"text text_type_main-medium mt-8\">\r\n                    Индетификатор заказа\r\n                </h3>\r\n                <div className={detailsStyles.done_section + \" mt-15\"}>\r\n                    <img src={done} alt=\"done\"/>\r\n                </div>\r\n                <p className=\"text text_type_main-default mt-15\">\r\n                    Ваш заказ начали готовить\r\n                </p>\r\n                <p className=\"text text_type_main-default mt-2 mb-30\" style={{color: '#8585AD'}}>\r\n                    Дождитесь готовности на орбитальной станции\r\n                </p>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n\r\nexport default OrderDetails;","import {RootState} from '../store';\r\nimport {ICartTypes} from \"../../models/i-cart.types\";\r\n\r\nexport const getCart = (state: RootState): ICartTypes[]  => {\r\n    return state.cart.ingredients;\r\n};\r\nexport const getIsShowOrderDetails = (state: RootState): boolean => {\r\n    return state.cart.isShowOrderDetails;\r\n};\r\nexport const getOrderNumber = (state: RootState): string => {\r\n    return state.cart.order.number;\r\n};\r\nexport const getIsCartLoading = (state: RootState): boolean => {\r\n    return state.cart.isLoading;\r\n};\r\nexport const getBunInCart = (state: RootState): ICartTypes | null => {\r\n    try {\r\n        return state.cart.ingredients.filter((item) => item.type === 'bun')[0];\r\n    } catch (e) {\r\n        return null\r\n    }\r\n};\r\nexport const getNotBunIngredients = (state: RootState): ICartTypes[] | null => {\r\n    try {\r\n        return state.cart.ingredients.filter((item) => item.type !== 'bun');\r\n    } catch (e) {\r\n        return null\r\n    }\r\n};\r\nexport const getTotalSum = (state: RootState): number => {\r\n    try {\r\n        const cart: ICartTypes[] = state.cart.ingredients;\r\n        return cart.reduce((sum: number, cur: ICartTypes) => {\r\n            return sum + cur.price;\r\n        }, 0)\r\n    } catch (e) {\r\n        return 0\r\n    }\r\n};\r\nexport const getCountInCartById = (state: RootState, id: string): number => {\r\n    try {\r\n        const ingredients: ICartTypes[] = state.cart.ingredients;\r\n        return ingredients.filter((item) => item._id === id).length;\r\n    } catch (e) {\r\n        return 0\r\n    }\r\n\r\n};\r\nexport const getCartErrorMessage = (state: RootState): string => {\r\n    return state.cart.errorMessage;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/spinner.7c744f4c.gif\";","import React, {FC} from 'react';\r\nimport preloaderStyles from './preloader.module.css'\r\nimport spinner from '../../images/spinner.gif'\r\n\r\nconst Preloader: FC = () => {\r\n    return (\r\n        <div className={preloaderStyles.wrapper}>\r\n            <img src={spinner} alt=\"spinner\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/antenna.7ddfe93a.png\";","import React, {FC} from 'react';\r\nimport errorStyles from './error-message.module.css'\r\nimport antenna from '../../images/antenna.png'\r\n\r\ntype TErrorMessage = {\r\n    errorMessage: string\r\n}\r\nconst ErrorMessage: FC<TErrorMessage> = ({errorMessage}) => {\r\n    return (\r\n        <div className={errorStyles.wrapper}>\r\n            <img src={antenna} alt=\"antenna\"/>\r\n            <p className=\"text text_type_main-large mt-10\">\r\n                {errorMessage}\r\n            </p>\r\n            <p className=\"text text_type_main-medium mt-10\">\r\n                Попробуте повторить попытку позднее.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;","import {createAsyncThunk} from '@reduxjs/toolkit';\r\nimport api from \"../../http\";\r\n\r\nexport const fetchIngredients = createAsyncThunk('fetch_all_ingredients',\r\n    async (_, ThunkAPI) => {\r\n        try {\r\n            const response = await api.getAllIngredients();\r\n            return response;\r\n        } catch (e) {\r\n            return ThunkAPI.rejectWithValue('Не удалось загрузить ингредиенты');\r\n        }\r\n    });\r\n","import {RootState} from '../store';\r\nimport {IIngredient} from \"../../models/i-ingredient.types\";\r\n\r\nexport const getAllIngredients = (state: RootState): IIngredient[] => {\r\n    return state.ingredients.ingredients;\r\n};\r\nexport const getIngredientsByType = (state: RootState, type: string): IIngredient[] => {\r\n    return state.ingredients.ingredients.filter((item) => item.type === type);\r\n};\r\nexport const getIsIngredientsLoading = (state: RootState): boolean => {\r\n    return state.ingredients.isLoading;\r\n};\r\nexport const getIngredientsErrorMessage = (state: RootState): string => {\r\n    return state.ingredients.errorMessage;\r\n};\r\nexport const getIngredientById = (state: RootState, id: string | undefined): IIngredient => {\r\n    return state.ingredients.ingredients.filter(item => item._id === id)[0]\r\n}\r\nexport const getPriceById = (state: RootState, id: string): number => {\r\n    return state.ingredients.ingredients.filter(item => item._id === id)[0].price\r\n}\r\nexport const getMobileImagesById = (state: RootState, ingredients: string[]): string[] => {\r\n    let images: string[] = []\r\n    ingredients.forEach((item: string) => {\r\n        const ingredientImage = getIngredientById(state, item).image_mobile\r\n        images.push(ingredientImage)\r\n    })\r\n    return images\r\n}\r\nexport const getAmountByIngredientsId = (state: RootState, ingredients: string []): number => {\r\n    let amount = 0\r\n    ingredients.forEach((item) => {\r\n        amount = amount + getPriceById(state, item)\r\n    })\r\n    return amount\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/black-hole.871164c3.jpg\";","import React from 'react';\r\nimport notFoundPageStyles from './not-found-page.module.css'\r\nimport blackHole from '../../images/black-hole.jpg'\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <div className={notFoundPageStyles.wrapper}>\r\n            <img className={notFoundPageStyles.black_hole} src={blackHole} alt=\"error 404\"/>\r\n            <div className={notFoundPageStyles.description}>\r\n                <p className=\"text text_type_main-large\">Страница не найдена</p>\r\n                <p className=\"text text_type_main-medium mt-10\">\r\n                    Возможно , судьба её печальна....\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;","export default __webpack_public_path__ + \"static/media/empty-cart.d988adff.png\";","import React, {FC} from 'react';\r\nimport emptyStyles from './constructor-empty.module.css'\r\nimport emptyCart from '../../images/empty-cart.png'\r\n\r\nconst ConstructorEmpty: FC = () => {\r\n    return (\r\n        <div className={emptyStyles.wrapper}>\r\n            <img src={emptyCart} alt=\"empty-cart\"/>\r\n            <p className={emptyStyles.description + \" text text_type_digits-default mt-10\"}>\r\n                Ваш коструктор пока пуст :( , перетащите ингридиенты из списка слева.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConstructorEmpty;","export const getUniqueKey = () => {\r\n    return new Date().valueOf()\r\n}\r\nexport const validationName = (name: string): string => {\r\n    if (name.length < 2) return 'не может быть короче 2 символов'\r\n    if (name.length > 15) return 'не может быть длиннее 15 символов'\r\n    return ''\r\n}\r\nexport const validationPassword = (password: string): string => {\r\n    if (password.length < 4) return 'не может быть короче 4 символов'\r\n    if (password.length > 15) return 'не может быть длиннее 15 символов'\r\n    return ''\r\n}\r\nexport const validateEmail = (email: string): string => {\r\n    if (String(email)\r\n        .toLowerCase()\r\n        .match(\r\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        )) {\r\n        return ''\r\n    } else {\r\n        return 'Неккоректный email'\r\n    }\r\n}\r\nconst lastDigitToWord = (digit: number): string => {\r\n    const lastFigure = digit % 10;\r\n    if ((digit >= 11 && digit < 15) || lastFigure === 0 || lastFigure >= 5) return 'дней';\r\n    if (lastFigure > 1 && lastFigure < 5) return 'дня';\r\n    return 'день';\r\n\r\n}\r\nexport const getDate = (orderCreateData: string): string => {\r\n    const orderCreateTime = orderCreateData.slice(11, 16)\r\n    const currentDate = new Date()\r\n    const createDate = new Date(orderCreateData);\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n    const diffInTime = currentDate.getTime() - createDate.getTime();\r\n    const diffInDays = Math.round(diffInTime / oneDay);\r\n    let whatDay\r\n    if (diffInDays === 0) whatDay = 'Сегодня'\r\n    if (diffInDays === 1) whatDay = 'Вчера'\r\n    if (diffInDays > 1) whatDay = `${diffInDays} ${lastDigitToWord(diffInDays)} назад`\r\n    return whatDay + ' ' + orderCreateTime + ' i-GMT+3';\r\n}\r\nexport const convertStatusOrderFromRussian = (status: string): string => {\r\n    if (status === 'done') {\r\n        return 'Выполнен'\r\n    } else {\r\n        return 'В работе'\r\n    }\r\n}","import React, {FC, useCallback, useRef} from 'react';\r\nimport fillingStyles from \"./constructor-not-bun-ingredient.module.css\";\r\nimport {ConstructorElement, DragIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {DropTargetMonitor, useDrag, useDrop, XYCoord} from \"react-dnd\";\r\nimport {removeFromCart, moveConstructorItem} from \"../../services/reducers/cart-slice\";\r\nimport classNames from \"classnames\";\r\nimport {ICartTypes} from \"../../models/i-cart.types\";\r\nimport {useAppDispatch} from \"../../hooks/redux\";\r\n\r\ntype TConstructorNotBunIngredient = {\r\n    ingredient: ICartTypes,\r\n    index: number\r\n}\r\n\r\ninterface DragItem {\r\n    index: number\r\n    id: string\r\n    type: string\r\n}\r\n\r\nconst ConstructorNotBunIngredient: FC<TConstructorNotBunIngredient> =\r\n    ({ingredient, index}) => {\r\n        const ref = useRef<HTMLLIElement>(null)\r\n        const dispatch = useAppDispatch()\r\n        const onRemoveItemClick = useCallback((key) => {\r\n            return () => dispatch(removeFromCart(key));\r\n        }, [dispatch]);\r\n        const [{isDragging}, drag] = useDrag({\r\n            type: \"filling\",\r\n            item: () => {\r\n                return {index}\r\n            },\r\n            collect: (monitor) => ({\r\n                isDragging: monitor.isDragging(),\r\n            })\r\n        })\r\n        const [, drop] = useDrop({\r\n            accept: \"filling\",\r\n            collect: (monitor) => ({\r\n                canDrop: monitor.canDrop(),\r\n            }),\r\n            hover: (item: DragItem, monitor: DropTargetMonitor) => {\r\n                if (!ref.current) {\r\n                    return\r\n                }\r\n                const dragIndex = item.index\r\n                const hoverIndex = index\r\n                if (dragIndex === hoverIndex) {\r\n                    return;\r\n                }\r\n                const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n                const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n                const clientOffset = monitor.getClientOffset();\r\n                const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top\r\n                if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                    return;\r\n                }\r\n                if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                    return;\r\n                }\r\n                dispatch(moveConstructorItem({drag: dragIndex, hover: hoverIndex}))\r\n                item.index = hoverIndex;\r\n            }\r\n        })\r\n        drag(drop(ref))\r\n        return (\r\n            <li className={classNames(fillingStyles.filling_item, {\r\n                [fillingStyles.drag]: isDragging\r\n            })} ref={ref}>\r\n                <DragIcon type=\"primary\"/>\r\n                <ConstructorElement\r\n                    text={ingredient.name}\r\n                    price={ingredient.price}\r\n                    thumbnail={ingredient.image_mobile}\r\n                    handleClose={onRemoveItemClick(ingredient.key)}\r\n                />\r\n            </li>\r\n        );\r\n    };\r\n\r\nexport default ConstructorNotBunIngredient;","import {RootState} from \"../store\";\r\nimport {IUserTypes} from \"../../models/i-user.types\";\r\n\r\nexport const getAuthIsLoading = (state: RootState): boolean => {\r\n    return state.auth.isLoading\r\n}\r\nexport const getIsAuth = (state: RootState): boolean => {\r\n    return state.auth.isAuth\r\n}\r\nexport const getCanResetPassword = (state: RootState): boolean => {\r\n    return state.auth.canResetPassword\r\n}\r\nexport const getUser = (state: RootState): IUserTypes => {\r\n    return state.auth.user\r\n}\r\nexport const getAuthErrorMessage = (state: RootState): string => {\r\n    return state.auth.errorMessage\r\n}","import React, {FC, useCallback} from 'react';\r\nimport constructorStyles from './burger-constructor.module.css'\r\nimport {Button, ConstructorElement, CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {fetchCreateOrder} from \"../../services/actions/cart-action-creators\";\r\nimport {getBunInCart, getCart, getNotBunIngredients, getTotalSum} from \"../../services/selectors/cart-selectors\";\r\nimport {useDrop} from \"react-dnd\";\r\nimport classNames from \"classnames\";\r\nimport ConstructorEmpty from \"../constructor-empty/constructor-empty\";\r\nimport {addToCart} from \"../../services/reducers/cart-slice\";\r\nimport {getUniqueKey} from \"../../utils/service\";\r\nimport ConstructorNotBunIngredient from \"../constructor-not-bun-ingredient/constructor-not-bun-ingredient\";\r\nimport {getIsAuth} from \"../../services/selectors/auth-selectors\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {ROUTE_LOGIN} from \"../../utils/const\";\r\nimport {ICartTypes} from \"../../models/i-cart.types\";\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\r\n\r\nconst BurgerConstructor: FC = () => {\r\n    const dispatch = useAppDispatch()\r\n    const cart = useAppSelector(state => getCart(state))\r\n    const bunInCart = useAppSelector(state=> getBunInCart(state))\r\n    const notBunIngredients = useAppSelector(state => getNotBunIngredients(state))\r\n    const totalSum = useAppSelector(state => getTotalSum(state))\r\n    const isAuth = useAppSelector(state=> getIsAuth(state))\r\n    const navigate = useNavigate()\r\n    const onCreateOrderClick = useCallback(() => {\r\n        if (!isAuth) {\r\n            navigate(ROUTE_LOGIN)\r\n            return\r\n        }\r\n        dispatch(fetchCreateOrder(cart))\r\n    }, [dispatch, cart, isAuth, navigate])\r\n    const [{canDrop}, drop] = useDrop(() => ({\r\n        accept: 'ingredient',\r\n        drop: (item: ICartTypes) => {\r\n            dispatch(addToCart({...item, key: getUniqueKey()}))\r\n        },\r\n        collect: (monitor) => ({\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    }));\r\n    let constructorItems = null\r\n    if (notBunIngredients) {\r\n        constructorItems = notBunIngredients.map((ingredient, index) => (<ConstructorNotBunIngredient\r\n            key={ingredient.key} ingredient={ingredient} index={index}/>))\r\n    }\r\n    return (\r\n        <section className={constructorStyles.wrapper} ref={drop}>\r\n            <div id ='constructor'\r\n                className={classNames(constructorStyles.order_wrapper, 'mt-25', {\r\n                [constructorStyles.canDrop]: canDrop\r\n            })}>\r\n                {bunInCart && (\r\n                    <div className={constructorStyles.order_item} id ='bun'>\r\n                        <ConstructorElement\r\n                            type=\"top\"\r\n                            isLocked={true}\r\n                            text={bunInCart.name + \" (верх)\"}\r\n                            price={bunInCart.price}\r\n                            thumbnail={bunInCart.image_mobile}\r\n                        />\r\n                    </div>)}\r\n                <ul className={constructorStyles.order_items}>\r\n                    {constructorItems}\r\n                </ul>\r\n                {bunInCart && (\r\n                    <div className={constructorStyles.order_item}>\r\n                        <ConstructorElement\r\n                            type=\"bottom\"\r\n                            isLocked={true}\r\n                            text={bunInCart.name + \" (низ)\"}\r\n                            price={bunInCart.price}\r\n                            thumbnail={bunInCart.image_mobile}\r\n                        />\r\n                    </div>)}\r\n                {cart.length === 0\r\n                    ? (<ConstructorEmpty/>)\r\n                    : (<div className={constructorStyles.create_order_section + \" pr-4 mt-10\"}>\r\n                        <p className=\"text text_type_digits-default mr-2\">{totalSum}</p>\r\n                        <div className={constructorStyles.icon_section + \" mr-4\"}>\r\n                            <CurrencyIcon type=\"primary\"/>\r\n                        </div>\r\n                        <Button type=\"primary\" size=\"medium\"\r\n                                onClick={() => onCreateOrderClick()}\r\n                                disabled={!bunInCart}\r\n                        >\r\n                            Оформить заказ\r\n                        </Button>\r\n                    </div>)}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","import React, {FC} from 'react';\r\nimport cardStyle from './ingredient-card.module.css'\r\nimport {Counter, CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {getCountInCartById} from \"../../services/selectors/cart-selectors\";\r\nimport {useDrag} from \"react-dnd\";\r\nimport classNames from \"classnames\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport {ROUTE_INGREDIENTS} from \"../../utils/const\";\r\nimport {IIngredient} from \"../../models/i-ingredient.types\";\r\nimport {useAppSelector} from \"../../hooks/redux\";\r\n\r\ntype TIngredientCard = {\r\n    ingredient: IIngredient\r\n}\r\nconst IngredientCard: FC<TIngredientCard> = ({ingredient}) => {\r\n    const location: any = useLocation()\r\n    const navigate = useNavigate()\r\n    const count = useAppSelector(state => getCountInCartById(state, ingredient._id))\r\n    const openDetail = (): void => {\r\n        navigate(ROUTE_INGREDIENTS + '/' + ingredient._id, {\r\n            state: {\r\n                from: location.pathname,\r\n                backgroundLocation: location\r\n            }\r\n        })\r\n    }\r\n    const [{isDragging}, drag] = useDrag(() => ({\r\n        type: 'ingredient',\r\n        item: {...ingredient},\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    }));\r\n    return (\r\n        <li className={classNames(cardStyle.wrapper, {\r\n            [cardStyle.dragging]: isDragging\r\n        })}\r\n            onClick={openDetail}\r\n            ref={drag}>\r\n            <div className={cardStyle.image_section}>\r\n                <img src={ingredient.image} alt={ingredient.name}/>\r\n            </div>\r\n            <div className={cardStyle.price_section}>\r\n                <p className=\"text text_type_digits-default mr-2\">{ingredient.price}</p>\r\n                <CurrencyIcon type=\"primary\"/>\r\n            </div>\r\n            <h4 className=\"text text_type_main-default\">{ingredient.name}</h4>\r\n            {count > 0 &&\r\n            <div className={cardStyle.count_section}>\r\n                <Counter count={count} size=\"default\"/>\r\n            </div>}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default IngredientCard;","import React from 'react';\r\nimport IngredientCard from \"../ingredient-card/ingredient-card\";\r\nimport listStyle from './ingredients-list.module.css'\r\nimport {IIngredient} from \"../../models/i-ingredient.types\";\r\n\r\ntype TIngredientsList = {\r\n    title: string\r\n    ingredients: IIngredient[]\r\n}\r\nconst IngredientsList = React.forwardRef<HTMLHeadingElement, TIngredientsList>(\r\n    ({title, ingredients}, ref) => {\r\n        const ingredientCardList = ingredients.map(item => (<IngredientCard key={item._id}\r\n                                                                            ingredient={item}/>))\r\n        return (\r\n            <section className=\"pb-10\" ref={ref}>\r\n                <h3 className=\"text text_type_main-medium\">{title}</h3>\r\n                <ul className={listStyle.wrapper} id=\"ingredients_list\">\r\n                    {ingredientCardList}\r\n                </ul>\r\n            </section>\r\n        );\r\n    })\r\n\r\nexport default IngredientsList;","import React, {FC, useCallback, useRef, useState} from 'react';\r\nimport burgerIngredientsStyle from './burger-ingredients.module.css'\r\nimport {Tab} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport IngredientsList from \"../ingredients-list/ingredients-list\";\r\nimport {getIngredientsByType} from \"../../services/selectors/ingredients-selectors\";\r\nimport {useAppSelector} from \"../../hooks/redux\";\r\n\r\ninterface INameIngredient {\r\n    bun: 'Булки',\r\n    sauce: 'Соусы',\r\n    main: 'Начинки'\r\n}\r\n\r\nconst nameIngredient: INameIngredient = {\r\n    bun: 'Булки',\r\n    sauce: 'Соусы',\r\n    main: 'Начинки'\r\n}\r\n\r\ninterface ITypeIngredient {\r\n    bun: 'bun',\r\n    sauce: 'sauce',\r\n    main: 'main'\r\n}\r\n\r\nconst typeIngredient: ITypeIngredient = {\r\n    bun: 'bun',\r\n    sauce: 'sauce',\r\n    main: 'main'\r\n}\r\n\r\ntype TCategories = {\r\n    id: number\r\n    type: string\r\n    name: string\r\n}\r\nconst categories: Array<TCategories> = [{id: 0, type: typeIngredient.bun, name: nameIngredient.bun},\r\n    {id: 1, type: typeIngredient.sauce, name: nameIngredient.sauce},\r\n    {id: 2, type: typeIngredient.main, name: nameIngredient.main}]\r\n\r\nconst BurgerIngredients: FC = () => {\r\n    const [activeCategory, setActiveCategory] = useState(categories[0].type)\r\n    const refBun = useRef<HTMLHeadingElement>(null)\r\n    const refSauce = useRef<HTMLHeadingElement>(null)\r\n    const refMain = useRef<HTMLHeadingElement>(null)\r\n    const buns = useAppSelector(state => getIngredientsByType(state, categories[0].type))\r\n    const sauces = useAppSelector(state => getIngredientsByType(state, categories[1].type))\r\n    const mains = useAppSelector(state => getIngredientsByType(state, categories[2].type))\r\n    const onScroll = (e: React.UIEvent<HTMLElement>): void => {\r\n        if (refBun.current && refSauce.current && refMain.current) {\r\n            const bunBorderTopY: number = Math.abs(refBun.current.getBoundingClientRect().top - 323)\r\n            const sauceBorderTopY: number = Math.abs(refSauce.current.getBoundingClientRect().top - 323)\r\n            const mainBorderTopY: number = Math.abs(refMain.current.getBoundingClientRect().top - 323)\r\n            let currentCategory: string = ''\r\n            if (bunBorderTopY < sauceBorderTopY && bunBorderTopY < mainBorderTopY) {\r\n                currentCategory = categories[0].type\r\n            }\r\n            if (sauceBorderTopY < bunBorderTopY && sauceBorderTopY < mainBorderTopY) {\r\n                currentCategory = categories[1].type\r\n            }\r\n            if (mainBorderTopY < sauceBorderTopY && mainBorderTopY < bunBorderTopY) {\r\n                currentCategory = categories[2].type\r\n            }\r\n            setActiveCategory(currentCategory)\r\n        }\r\n    }\r\n    const onTabClick = useCallback((value: string) => {\r\n        setActiveCategory(value)\r\n        switch (value) {\r\n            case categories[0].type: {\r\n                if (refBun.current) refBun.current.scrollIntoView({behavior: \"smooth\"});\r\n                break\r\n            }\r\n            case categories[1].type: {\r\n                if (refSauce.current) refSauce.current.scrollIntoView({behavior: \"smooth\"});\r\n                break\r\n            }\r\n            case categories[2].type: {\r\n                if (refMain.current) refMain.current.scrollIntoView({behavior: \"smooth\"});\r\n                break\r\n            }\r\n            default:\r\n                if (refBun.current) refBun.current.scrollIntoView({behavior: \"smooth\"});\r\n        }\r\n\r\n    }, [refBun, refSauce, refMain])\r\n    const selectBlock = categories.map(item => {\r\n        return (\r\n            <Tab key={item.id} value={item.type} active={activeCategory === item.type} onClick={onTabClick}>\r\n                {item.name}\r\n            </Tab>\r\n        )\r\n    })\r\n    return (\r\n        <div className={burgerIngredientsStyle.wrapper}\r\n        >\r\n            <h2 className=\"text text_type_main-large mt-10\">Собирите бургер</h2>\r\n            <nav style={{display: 'flex', justifyContent: 'center'}} className={burgerIngredientsStyle.menu + \" mt-5\"}>\r\n                {selectBlock}\r\n            </nav>\r\n            <div id=\"scrolledBlock\" className={burgerIngredientsStyle.ingredients_wrapper + \" mt-10 mb-10\"}\r\n                 onScroll={onScroll}>\r\n                <IngredientsList ref={refBun} title={categories[0].name} ingredients={buns}/>\r\n                <IngredientsList ref={refSauce} title={categories[1].name} ingredients={sauces}/>\r\n                <IngredientsList ref={refMain} title={categories[2].name} ingredients={mains}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BurgerIngredients;","import React from 'react';\r\nimport mainStyle from './main.module.css'\r\nimport BurgerConstructor from \"../../components/burger-constructor/burger-constructor\";\r\nimport BurgerIngredients from \"../../components/burger-ingredients/burger-ingredients\";\r\nimport {DndProvider} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\n\r\nconst Main = () => {\r\n    return (\r\n        <main className={mainStyle.wrapper}>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <BurgerIngredients/>\r\n                <BurgerConstructor/>\r\n            </DndProvider>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Main;","import React, {FC} from 'react';\r\nimport ingredientInfoStyles from \"./ingredient-info.module.css\";\r\nimport {IIngredient} from \"../../models/i-ingredient.types\";\r\n\r\ntype TIngredientInfo = {\r\n    currentIngredient: IIngredient\r\n}\r\nconst IngredientInfo: FC<TIngredientInfo> = ({currentIngredient}) => {\r\n    return (\r\n        <div className={ingredientInfoStyles.container + \" mb-15\"}>\r\n            <section className={ingredientInfoStyles.img_section + \" pl-5 pr-5\"}>\r\n                <img src={currentIngredient.image_large} alt={currentIngredient.name}/>\r\n            </section>\r\n            <h4 className=\"text text_type_main-medium mt-4\">\r\n                {currentIngredient.name}\r\n            </h4>\r\n            <ul className={ingredientInfoStyles.details_section + \" mt-8\"}>\r\n                <li className={ingredientInfoStyles.details_item}>\r\n                    <p className=\"text text_type_main-default\">Калории,ккал</p>\r\n                    <p className=\"text text_type_digits-default mt-2\">{currentIngredient.calories}</p>\r\n                </li>\r\n                <li className={ingredientInfoStyles.details_item}>\r\n                    <p className=\"text text_type_main-default\">Белки, г</p>\r\n                    <p className=\"text text_type_digits-default mt-2\">{currentIngredient.proteins}</p>\r\n                </li>\r\n                <li className={ingredientInfoStyles.details_item}>\r\n                    <p className=\"text text_type_main-default\">Жиры, г</p>\r\n                    <p className=\"text text_type_digits-default mt-2\">{currentIngredient.fat}</p>\r\n                </li>\r\n                <li className={ingredientInfoStyles.details_item}>\r\n                    <p className=\"text text_type_main-default\">Углеводы, г</p>\r\n                    <p className=\"text text_type_digits-default mt-2\">{currentIngredient.carbohydrates}</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IngredientInfo;","import React, {FC} from 'react';\r\nimport Modal from \"../modal/modal\";\r\nimport IngredientInfo from \"../ingredient-info/ingredient-info\";\r\nimport {IIngredient} from \"../../models/i-ingredient.types\";\r\n\r\ntype TIngredientDetails = {\r\n    closeModal: ()=> void,\r\n    currentIngredient: IIngredient\r\n}\r\nconst IngredientDetails: FC<TIngredientDetails> = ({closeModal, currentIngredient}) => {\r\n    return (\r\n        <Modal title=\"Детали ингредиента\" closeModal={closeModal}>\r\n            <IngredientInfo currentIngredient={currentIngredient}/>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default IngredientDetails;","import React, {useState} from 'react';\r\nimport ingredientsStyles from './ingredients.module.css'\r\nimport {useLocation, useParams, useNavigate} from \"react-router-dom\";\r\nimport IngredientInfo from \"../../components/ingredient-info/ingredient-info\";\r\nimport {getIngredientById} from \"../../services/selectors/ingredients-selectors\";\r\nimport IngredientDetails from \"../../components/ingredient-details/ingredient-details\";\r\nimport {ROUTE_MAIN} from \"../../utils/const\";\r\nimport {useAppSelector} from \"../../hooks/redux\";\r\n\r\nconst Ingredients = () => {\r\n    const location: any = useLocation()\r\n    const navigate = useNavigate()\r\n    const id = useParams().id\r\n    const [isShowIngredientDetails, setIsShowIngredientDetails] = useState(true)\r\n    const currentIngredient = useAppSelector(state => getIngredientById(state, id))\r\n    const closeIngredientDetails = () => {\r\n        setIsShowIngredientDetails(false)\r\n        navigate(ROUTE_MAIN)\r\n    }\r\n    if (location.state && location.state.from === ROUTE_MAIN) {\r\n        return (\r\n            <>\r\n                {isShowIngredientDetails && (<IngredientDetails closeModal={closeIngredientDetails}\r\n                                                                currentIngredient={currentIngredient}/>)}\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <div className={ingredientsStyles.wrapper}>\r\n            <h1 className=\"text text_type_main-medium\">Детали ингредиента</h1>\r\n            <IngredientInfo currentIngredient={currentIngredient}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Ingredients;","import {createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport api from \"../../http\";\r\n\r\nexport type TResetPassword = {\r\n    password: string,\r\n    key: string\r\n}\r\n\r\nexport interface IRegistrationData {\r\n    name: string\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type TLoginData = Omit<IRegistrationData, 'name'>\r\n\r\nconst handlerError = (e: any) => {\r\n    if (e instanceof Error && e.message) return e.message;\r\n    return 'неизвестная ошибка';\r\n}\r\nexport const fetchRegister = createAsyncThunk(\r\n    'register',\r\n    async (data: IRegistrationData, ThunkAPI) => {\r\n        try {\r\n            const res = await api.register(data)\r\n            return res\r\n        } catch (e) {\r\n            return ThunkAPI.rejectWithValue(handlerError(e))\r\n        }\r\n    }\r\n)\r\nexport const fetchLogin = createAsyncThunk(\r\n    'login',\r\n    async (user: TLoginData, ThunkAPI) => {\r\n        try {\r\n            const res = await api.login(user)\r\n            return res\r\n        } catch (e) {\r\n            return ThunkAPI.rejectWithValue(handlerError(e))\r\n        }\r\n    }\r\n)\r\nexport const fetchForgotPassword = createAsyncThunk(\r\n    'forgot',\r\n    async (email: string, ThunkAPI) => {\r\n        try {\r\n            const res = await api.forgotPassword(email)\r\n            return res\r\n        } catch (e) {\r\n            return ThunkAPI.rejectWithValue(handlerError(e))\r\n        }\r\n    }\r\n)\r\nexport const fetchResetPassword = createAsyncThunk(\r\n    'reset',\r\n    async (data: TResetPassword, ThunkAPI) => {\r\n        try {\r\n            const res = await api.resetPassword(data)\r\n            return res\r\n        } catch (e) {\r\n            return ThunkAPI.rejectWithValue(handlerError(e))\r\n        }\r\n    }\r\n)\r\nexport const fetchCheckAuth = createAsyncThunk(\r\n    'check_auth',\r\n    async (_, ThunkAPI) => {\r\n        try {\r\n            return await api.checkAuth()\r\n        } catch (e) {\r\n            return ThunkAPI.rejectWithValue('')\r\n        }\r\n    }\r\n)\r\nexport const fetchLogOut = createAsyncThunk(\r\n    'out',\r\n    async (_, ThunkAPI) => {\r\n        try {\r\n            const res = await api.LogOut()\r\n            return res\r\n        } catch (e) {\r\n            return ThunkAPI.rejectWithValue(handlerError(e))\r\n        }\r\n    }\r\n)\r\nexport const fetchUpdateUser = createAsyncThunk(\r\n    'update_user',\r\n    async (user: IRegistrationData, ThunkAPI) => {\r\n        try {\r\n            const res = await api.updateUser(user)\r\n            return res\r\n        } catch (e) {\r\n            return ThunkAPI.rejectWithValue(handlerError(e))\r\n        }\r\n    }\r\n)\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {IUserTypes} from \"../../models/i-user.types\";\r\nimport {\r\n    fetchCheckAuth,\r\n    fetchForgotPassword,\r\n    fetchLogin, fetchLogOut,\r\n    fetchRegister,\r\n    fetchResetPassword, fetchUpdateUser\r\n} from \"../actions/auth-action-creators\";\r\n\r\ninterface AuthState {\r\n    isLoading: boolean,\r\n    isAuth: boolean,\r\n    user: IUserTypes,\r\n    errorMessage: string,\r\n    canResetPassword: boolean\r\n}\r\n\r\nexport const initialState: AuthState = {\r\n    isLoading: false,\r\n    isAuth: false,\r\n    user: {\r\n        name: '',\r\n        email: ''\r\n    },\r\n    errorMessage: '',\r\n    canResetPassword: false\r\n}\r\nexport const AuthSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        removeError: (state) => {\r\n            state.errorMessage = ''\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchRegister.fulfilled.type]: (state, action: PayloadAction<IUserTypes>) => {\r\n            state.user = action.payload\r\n            state.isAuth = true\r\n            state.isLoading = false;\r\n        },\r\n        [fetchRegister.pending.type]: (state) => {\r\n            state.isLoading = true\r\n            state.errorMessage = '';\r\n        },\r\n        [fetchRegister.rejected.type]: (state, action: PayloadAction<string>) => {\r\n            state.isLoading = false;\r\n            state.errorMessage = action.payload;\r\n        },\r\n        [fetchLogin.fulfilled.type]: (state, action: PayloadAction<IUserTypes>) => {\r\n            state.user = action.payload\r\n            state.isAuth = true\r\n            state.isLoading = false;\r\n        },\r\n        [fetchLogin.pending.type]: (state) => {\r\n            state.isLoading = true\r\n            state.errorMessage = '';\r\n        },\r\n        [fetchLogin.rejected.type]: (state, action: PayloadAction<string>) => {\r\n            state.isLoading = false;\r\n            state.errorMessage = action.payload;\r\n        },\r\n        [fetchForgotPassword.fulfilled.type]: (state) => {\r\n            state.canResetPassword = true\r\n            state.isLoading = false;\r\n        },\r\n        [fetchForgotPassword.pending.type]: (state) => {\r\n            state.isLoading = true\r\n            state.errorMessage = '';\r\n        },\r\n        [fetchForgotPassword.rejected.type]: (state, action: PayloadAction<string>) => {\r\n            state.isLoading = false;\r\n            state.errorMessage = action.payload;\r\n        },\r\n        [fetchResetPassword.fulfilled.type]: (state) => {\r\n            state.canResetPassword = false\r\n            state.isLoading = false;\r\n        },\r\n        [fetchResetPassword.pending.type]: (state) => {\r\n            state.isLoading = true\r\n            state.errorMessage = '';\r\n        },\r\n        [fetchResetPassword.rejected.type]: (state, action: PayloadAction<string>) => {\r\n            state.isLoading = false;\r\n            state.errorMessage = action.payload;\r\n        },\r\n        [fetchCheckAuth.fulfilled.type]: (state, action: PayloadAction<IUserTypes>) => {\r\n            state.user = action.payload\r\n            state.isAuth = true\r\n            state.isLoading = false;\r\n        },\r\n        [fetchCheckAuth.pending.type]: (state) => {\r\n            state.isLoading = true\r\n            state.errorMessage = '';\r\n        },\r\n        [fetchCheckAuth.rejected.type]: (state, action: PayloadAction<string>) => {\r\n            state.isLoading = false;\r\n            state.errorMessage = action.payload;\r\n        },\r\n        [fetchLogOut.fulfilled.type]: (state, action: PayloadAction<IUserTypes>) => {\r\n            state.user = {\r\n                name: '',\r\n                email: ''\r\n            }\r\n            state.isAuth = false\r\n            state.isLoading = false;\r\n        },\r\n        [fetchLogOut.pending.type]: (state) => {\r\n            state.isLoading = true\r\n            state.errorMessage = '';\r\n        },\r\n        [fetchLogOut.rejected.type]: (state, action: PayloadAction<string>) => {\r\n            state.isLoading = false;\r\n            state.errorMessage = action.payload;\r\n        },\r\n        [fetchUpdateUser.fulfilled.type]: (state, action: PayloadAction<IUserTypes>) => {\r\n            state.user = action.payload\r\n            state.isLoading = false;\r\n        },\r\n        [fetchUpdateUser.pending.type]: (state) => {\r\n            state.isLoading = true\r\n            state.errorMessage = '';\r\n        },\r\n        [fetchUpdateUser.rejected.type]: (state, action: PayloadAction<string>) => {\r\n            state.isLoading = false;\r\n            state.errorMessage = action.payload;\r\n        },\r\n    }\r\n})\r\n\r\nexport const {removeError} = AuthSlice.actions\r\nexport default AuthSlice.reducer;","import React, {FC, useEffect} from 'react';\r\nimport authErrorStyles from './autch-error.module.css'\r\nimport classNames from \"classnames\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {removeError} from '../../services/reducers/auth-slice'\r\nimport {getAuthErrorMessage} from \"../../services/selectors/auth-selectors\";\r\nimport {useAppSelector} from \"../../hooks/redux\";\r\n\r\nconst AuthError: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const authErrorMessage = useAppSelector(state => getAuthErrorMessage(state))\r\n    useEffect(() => {\r\n        let timeOut: ReturnType<typeof setTimeout>\r\n        if (authErrorMessage) {\r\n            timeOut = setTimeout(() => {\r\n                dispatch(removeError())\r\n            }, 4000)\r\n        }\r\n        return () => {\r\n            clearTimeout(timeOut)\r\n        }\r\n    }, [authErrorMessage, dispatch])\r\n\r\n    return (\r\n        <div className={classNames(authErrorStyles.wrapper, {\r\n            [authErrorStyles.show]: !!authErrorMessage\r\n        })}>\r\n            <p className=\"text text_type_main-default\">{authErrorMessage}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthError;","import React, {useEffect, useState} from 'react';\r\nimport forgotStyles from \"../forgot-password/forgot-password.module.css\";\r\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {Link, useLocation, useNavigate} from \"react-router-dom\";\r\nimport {ROUTE_FORGOT_PASSWORD, ROUTE_LOGIN} from \"../../utils/const\";\r\nimport {fetchResetPassword} from \"../../services/actions/auth-action-creators\";\r\nimport {validationPassword} from \"../../utils/service\";\r\nimport AuthError from \"../../components/auth-error/auth-error\";\r\nimport {getAuthIsLoading, getCanResetPassword} from \"../../services/selectors/auth-selectors\";\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\r\n\r\nconst ResetPassword = () => {\r\n    const location: any = useLocation()\r\n    const navigate = useNavigate()\r\n    const dispatch = useAppDispatch()\r\n    const canResetPassword = useAppSelector(state => getCanResetPassword(state))\r\n    const isAuthLoading = useAppSelector(state => getAuthIsLoading(state))\r\n    const [inputsValues, setInputsValues] = useState({\r\n        password: '',\r\n        key: ''\r\n    })\r\n    const [passwordError, setPasswordError] = useState('')\r\n    useEffect(() => {\r\n        if (!location.state || location.state.from !== ROUTE_FORGOT_PASSWORD) {\r\n            navigate(ROUTE_FORGOT_PASSWORD)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    useEffect(() => {\r\n        if (!canResetPassword) navigate(ROUTE_LOGIN)\r\n    }, [canResetPassword, navigate])\r\n    const onDataChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputsValues({...inputsValues, [e.target.name]: e.target.value})\r\n    }\r\n    const onSubmit = (e: React.SyntheticEvent) => {\r\n        e.preventDefault()\r\n        const passwordError = validationPassword(inputsValues.password)\r\n        setPasswordError(passwordError)\r\n        if (!passwordError) {\r\n            dispatch(fetchResetPassword(inputsValues))\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit} className={forgotStyles.wrapper}>\r\n            <h1 className=\"text text_type_main-medium\">Восстановление пароля</h1>\r\n            <Input\r\n                type={'text'}\r\n                placeholder={'Введите новый пароль'}\r\n                onChange={onDataChange}\r\n                value={inputsValues.password}\r\n                name={'password'}\r\n                error={!!passwordError}\r\n                errorText={passwordError}\r\n                size={'default'}\r\n                icon={'ShowIcon'}\r\n            />\r\n            <Input\r\n                type={'text'}\r\n                placeholder={'Введите код из письма'}\r\n                onChange={onDataChange}\r\n                value={inputsValues.key}\r\n                name={'key'}\r\n                error={false}\r\n                errorText={'Ошибка'}\r\n                size={'default'}\r\n            />\r\n            <Button type=\"primary\" size=\"medium\" disabled={isAuthLoading}>\r\n                Сохранить\r\n            </Button>\r\n            <div className={forgotStyles.hint + ' mt-15'}>\r\n                <p className=\"text text_type_main-default\"> Вспомнили пароль? </p>\r\n                <Link to={ROUTE_LOGIN} className={forgotStyles.link}>\r\n                    <p className=\"text text_type_main-default\">Войти </p>\r\n                </Link>\r\n            </div>\r\n            <AuthError/>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;","import React, {useEffect, useState} from 'react';\r\nimport forgotStyles from './forgot-password.module.css'\r\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {Link, useLocation, useNavigate} from \"react-router-dom\";\r\nimport {ROUTE_LOGIN, ROUTE_RESET_PASSWORD} from \"../../utils/const\";\r\nimport {fetchForgotPassword} from \"../../services/actions/auth-action-creators\";\r\nimport {getAuthIsLoading, getCanResetPassword} from \"../../services/selectors/auth-selectors\";\r\nimport {validateEmail} from \"../../utils/service\";\r\nimport AuthError from \"../../components/auth-error/auth-error\";\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\r\n\r\nconst ForgotPassword = () => {\r\n    const dispatch = useAppDispatch()\r\n    const navigate = useNavigate()\r\n    const location: any = useLocation()\r\n    const [email, setEmail] = useState('')\r\n    const [error, setError] = useState('')\r\n    const canResetPassword = useAppSelector(state => getCanResetPassword(state))\r\n    const isAuthLoading = useAppSelector(state => getAuthIsLoading(state))\r\n    useEffect(() => {\r\n        if (canResetPassword) navigate(ROUTE_RESET_PASSWORD, {state: {from: location.pathname}})\r\n    }, [canResetPassword, navigate, location])\r\n    const onEmailChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setEmail(e.target.value)\r\n    }\r\n    const onSubmit = (e: React.SyntheticEvent): void => {\r\n        e.preventDefault()\r\n        const emailError = validateEmail(email)\r\n        emailError ? setError(emailError) : dispatch(fetchForgotPassword(email))\r\n    }\r\n    return (\r\n        <form className={forgotStyles.wrapper} onSubmit={onSubmit} >\r\n            <h1 className=\"text text_type_main-medium\">Восстановление пароля</h1>\r\n            <Input\r\n                type={'text'}\r\n                placeholder={'Укажите E-mail'}\r\n                onChange={onEmailChange}\r\n                value={email}\r\n                name={'email'}\r\n                error={!!error}\r\n                errorText={error}\r\n                size={'default'}\r\n            />\r\n            <Button type=\"primary\" size=\"medium\" disabled={isAuthLoading}>\r\n                Восстановить\r\n            </Button>\r\n            <div className={forgotStyles.hint + ' mt-15'}>\r\n                <p className=\"text text_type_main-default\"> Вспомнили пароль? </p>\r\n                <Link to={ROUTE_LOGIN} className={forgotStyles.link}>\r\n                    <p className=\"text text_type_main-default\">Войти </p>\r\n                </Link>\r\n            </div>\r\n            <AuthError/>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;","import React, {FC} from 'react';\r\nimport profileStyles from './profile.module.css'\r\nimport {Link, Outlet, useLocation} from 'react-router-dom'\r\nimport {ROUTE_ORDERS} from \"../../utils/const\";\r\nimport {fetchLogOut} from \"../../services/actions/auth-action-creators\";\r\nimport classNames from \"classnames\";\r\nimport {useAppDispatch} from \"../../hooks/redux\";\r\n\r\nconst Profile: FC = () => {\r\n    const dispatch = useAppDispatch()\r\n    const location: any = useLocation()\r\n    const pathname = location.pathname.split('/')[2]\r\n    const onOutClick = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.preventDefault()\r\n        dispatch(fetchLogOut())\r\n    }\r\n    return (\r\n        <div className={profileStyles.wrapper}>\r\n            <div className={profileStyles.content}>\r\n                <section>\r\n                    <nav className={profileStyles.navigation}>\r\n                        <Link to=\"\" className={classNames(profileStyles.link, {\r\n                            [profileStyles.active]: !pathname\r\n                        })}>\r\n                            <p className=\"text text_type_main-medium\">Профиль</p>\r\n                        </Link>\r\n                        <Link to={ROUTE_ORDERS} className={classNames(profileStyles.link, {\r\n                            [profileStyles.active]: pathname === ROUTE_ORDERS\r\n                        })}>\r\n                            <p className=\"text text_type_main-medium\">История заказов</p>\r\n                        </Link>\r\n                        <button className={profileStyles.link} onClick={onOutClick}>\r\n                            <p className=\"text text_type_main-medium\">Выход</p>\r\n                        </button>\r\n                    </nav>\r\n                    <div className={profileStyles.hint + \" mt-20\"}>\r\n                        <p className=\"text text_type_main-default\">\r\n                            В этом разделе вы сможете\r\n                            {!pathname && \"изменить свои персональные данные\"}\r\n                            {pathname === ROUTE_ORDERS && \" посмотреть свою историю заказов\"}\r\n                        </p>\r\n                    </div>\r\n                </section>\r\n                <Outlet/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, {useEffect, useState} from 'react';\r\nimport loginStyles from './auth.module.css'\r\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport {ROUTE_FORGOT_PASSWORD, ROUTE_LOGIN, ROUTE_MAIN, ROUTE_REGISTER} from \"../../utils/const\";\r\nimport {fetchLogin, fetchRegister} from \"../../services/actions/auth-action-creators\";\r\nimport {getAuthIsLoading, getIsAuth} from \"../../services/selectors/auth-selectors\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {validateEmail, validationName, validationPassword} from \"../../utils/service\";\r\nimport AuthError from \"../../components/auth-error/auth-error\";\r\nimport {TLocation} from \"../../models/i-location\";\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\r\n\r\nconst Auth = () => {\r\n    const dispatch = useAppDispatch();\r\n    let navigate = useNavigate();\r\n    const location = useLocation() as TLocation;\r\n    let prevPath: string | null = null\r\n    if (location.state && location.state.from) prevPath = location.state.from.pathname\r\n    const isAuth = useAppSelector(state => getIsAuth(state))\r\n    const isAuthLoading = useAppSelector(state => getAuthIsLoading(state))\r\n    const [inputsValues, setInputsValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const [errors, setErrors] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const {pathname} = useLocation()\r\n    const isRegister = pathname === ROUTE_REGISTER\r\n    useEffect(() => {\r\n        if (isAuth && prevPath) {\r\n            navigate(prevPath)\r\n        } else {\r\n            if (isAuth) navigate(ROUTE_MAIN)\r\n        }\r\n    }, [isAuth, navigate, prevPath])\r\n    useEffect(() => {\r\n        setErrors({\r\n            name: '',\r\n            email: '',\r\n            password: ''\r\n        })\r\n        setInputsValues({\r\n            name: '',\r\n            email: '',\r\n            password: ''\r\n        })\r\n    }, [isRegister])\r\n    const onDataChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setInputsValues({...inputsValues, [e.target.name]: e.target.value})\r\n    }\r\n    const onSubmit = (e: React.SyntheticEvent): void => {\r\n        e.preventDefault()\r\n        const emailError = validateEmail(inputsValues.email)\r\n        const passwordError = validationPassword(inputsValues.password)\r\n        const nameError = isRegister ? validationName(inputsValues.name) : '';\r\n        setErrors({\r\n            name: nameError,\r\n            email: emailError,\r\n            password: passwordError\r\n        })\r\n        if (isRegister) {\r\n            if (!nameError && !emailError && !passwordError) {\r\n                dispatch(fetchRegister(inputsValues))\r\n            }\r\n        } else {\r\n            if (!emailError && !passwordError) {\r\n                dispatch(fetchLogin({email: inputsValues.email, password: inputsValues.password}))\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit} className={loginStyles.wrapper}>\r\n            <h1 className=\"text text_type_main-medium\">{isRegister ? 'Регистрация' : 'Вход'}</h1>\r\n            {isRegister && (\r\n                <Input\r\n                    type={'text'}\r\n                    placeholder={'Имя'}\r\n                    onChange={onDataChange}\r\n                    value={inputsValues.name}\r\n                    name={'name'}\r\n                    error={!!errors.name}\r\n                    errorText={errors.name}\r\n                    size={'default'}\r\n                />\r\n            )}\r\n            <Input\r\n                type={'text'}\r\n                placeholder={'E-mail'}\r\n                onChange={onDataChange}\r\n                value={inputsValues.email}\r\n                name={'email'}\r\n                error={!!errors.email}\r\n                errorText={errors.email}\r\n                size={'default'}\r\n            />\r\n            <Input\r\n                type={'text'}\r\n                placeholder={'Пароль'}\r\n                onChange={onDataChange}\r\n                icon={'ShowIcon'}\r\n                value={inputsValues.password}\r\n                name={'password'}\r\n                error={!!errors.password}\r\n                errorText={errors.password}\r\n                size={'default'}\r\n            />\r\n            <Button type=\"primary\" size=\"medium\" disabled={isAuthLoading}>\r\n                {isRegister && \"Зарегистрироваться\"}\r\n                {!isRegister && \"Войти\"}\r\n            </Button>\r\n            <div className={'mt-10'}>\r\n                <div className={loginStyles.hint}>\r\n                    <p className=\"text text_type_main-default\">\r\n                        {isRegister && 'Уже зарегистрированы ?'}\r\n                        {!isRegister && 'Вы новый пользователь ?'}\r\n                    </p>\r\n                    <Link to={isRegister ? ROUTE_LOGIN : ROUTE_REGISTER} className={loginStyles.link}>\r\n                        <p className=\"text text_type_main-default\">\r\n                            {isRegister && 'Войти'}\r\n                            {!isRegister && 'Зарегистрироваться'}\r\n                        </p>\r\n                    </Link>\r\n                </div>\r\n                {!isRegister && (\r\n                    <div className={loginStyles.hint + ' mt-4'}>\r\n                        <p className=\"text text_type_main-default\"> Забыли пароль ? </p>\r\n                        <Link to={ROUTE_FORGOT_PASSWORD} className={loginStyles.link}>\r\n                            <p className=\"text text_type_main-default\">Востановить пароль </p>\r\n                        </Link>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <AuthError/>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React, {useState} from 'react';\r\nimport profileInfoStyles from './profile-info.module.css'\r\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {fetchUpdateUser} from \"../../services/actions/auth-action-creators\";\r\nimport {getAuthIsLoading, getUser} from \"../../services/selectors/auth-selectors\";\r\nimport classNames from \"classnames\";\r\nimport {validateEmail, validationName, validationPassword} from \"../../utils/service\";\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\r\n\r\nconst ProfileInfo = () => {\r\n    const dispatch = useAppDispatch()\r\n    const user = useAppSelector(state => getUser(state))\r\n    const isAuthLoading = useAppSelector(state  => getAuthIsLoading(state))\r\n\r\n    const [inputsValues, setInputsValues] = useState({\r\n        name: user.name,\r\n        email: user.email,\r\n        password: ''\r\n    })\r\n    const [errors, setErrors] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const [isDataChange, setIsDataChange] = useState(false)\r\n    const onDataChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if(!isDataChange) setIsDataChange(true)\r\n        setInputsValues({...inputsValues, [e.target.name]: e.target.value})\r\n    }\r\n    const onSaveClick = (e: React.SyntheticEvent) => {\r\n        e.preventDefault()\r\n        const emailError = validateEmail(inputsValues.email)\r\n        const nameError = validationName(inputsValues.name)\r\n        let passwordError = ''\r\n        if(inputsValues.password){\r\n            passwordError = validationPassword(inputsValues.password)\r\n        }\r\n        setErrors({\r\n            name: nameError,\r\n            email: emailError,\r\n            password: passwordError\r\n        })\r\n        if(!nameError && !emailError && !passwordError) {\r\n            dispatch(fetchUpdateUser(inputsValues))\r\n            setIsDataChange(false)\r\n        }\r\n    }\r\n    const onCancelClick = (e: React.SyntheticEvent) => {\r\n        e.preventDefault()\r\n        setInputsValues({\r\n            name: user.name,\r\n            email: user.email,\r\n            password: ''\r\n        })\r\n        setErrors({\r\n            name: '',\r\n            email: '',\r\n            password: ''\r\n        })\r\n        setIsDataChange(false)\r\n    }\r\n    return (\r\n        <form onSubmit={onSaveClick} className={profileInfoStyles.input_section}>\r\n            <Input\r\n                type={'text'}\r\n                placeholder={'Имя'}\r\n                onChange={onDataChange}\r\n                icon={'EditIcon'}\r\n                value={inputsValues.name}\r\n                name={'name'}\r\n                error={!!errors.name}\r\n                errorText={errors.name}\r\n                size={'default'}\r\n            />\r\n            <Input\r\n                type={'text'}\r\n                placeholder={'E-mail'}\r\n                onChange={onDataChange}\r\n                icon={'EditIcon'}\r\n                value={inputsValues.email}\r\n                name={'email'}\r\n                error={!!errors.email}\r\n                errorText={errors.email}\r\n                size={'default'}\r\n            />\r\n            <Input\r\n                type={'text'}\r\n                placeholder={'Пароль'}\r\n                onChange={onDataChange}\r\n                icon={'EditIcon'}\r\n                value={inputsValues.password}\r\n                name={'password'}\r\n                error={!!errors.password}\r\n                errorText={errors.password}\r\n                size={'default'}\r\n            />\r\n            <div className={classNames(profileInfoStyles.button_section, {\r\n                [profileInfoStyles.show]: isDataChange\r\n            })}>\r\n                <button  onClick={onCancelClick} className={profileInfoStyles.cancel_button} type=\"reset\">\r\n                    <p className=\"text text_type_main-small\"> Отмена</p>\r\n                </button>\r\n                <Button type=\"primary\" size=\"small\" disabled={isAuthLoading}>\r\n                    <p className=\"text text_type_main-small\">Сохранить</p>\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import {RootState} from \"../store\";\r\nimport {IOrder} from \"../../models/i-order.types\";\r\n\r\nexport const getOrders = (state: RootState) => {\r\n    return state.order.orders\r\n}\r\nexport const getOrderById = (state: RootState, id: any): IOrder => {\r\n    return state.order.orders.filter((item: IOrder) => item._id === id)[0]\r\n}\r\nexport const getTotal = (state: RootState): number => {\r\n    return state.order.total\r\n}\r\nexport const getTotalToday = (state: RootState): number => {\r\n    return state.order.totalToday\r\n}\r\nexport const getNumbersOrdersInProcess = (state: RootState): number[] => {\r\n    const numbers: number[] = []\r\n    state.order.orders.forEach((item: IOrder) => {\r\n        if (item.status !== 'done') numbers.push(item.number)\r\n    })\r\n    return numbers\r\n}\r\nexport const getNumbersReadyOrders = (state: RootState): number[] => {\r\n    const numbers: number[] = []\r\n    state.order.orders.forEach((item: IOrder) => {\r\n        if (item.status === 'done') numbers.push(item.number)\r\n    })\r\n    return numbers\r\n}\r\nexport const getCountIngredientsInOrder = (state: RootState, ingredientId: any, orderId: any): number => {\r\n    const order = getOrderById(state, orderId)\r\n    return order.ingredients.filter(item => item === ingredientId).length\r\n}\r\nexport const getCountIngredientsInCurrentOrder = (state: RootState, ingredientId: any): number => {\r\n    const order = state.order.currentOrder\r\n    if(!order) return 0\r\n    return  order.ingredients.filter(item => item === ingredientId).length\r\n}\r\nexport const getOrderByNumber = (state: RootState, orderNumber: number ): IOrder => {\r\n    return state.order.orders.filter((item: IOrder) => item.number === orderNumber)[0]\r\n}\r\nexport const getCurrentNumber = (state: RootState): IOrder | null => {\r\n    return state.order.currentOrder\r\n}\r\nexport const getOrderError = (state: RootState): string => {\r\n    return state.order.error\r\n}\r\nexport const getOrderIsLoading = (state: RootState): boolean => {\r\n    return state.order.isLoading\r\n}\r\n\r\n","import React, {FC} from 'react';\r\nimport priceWithIconStyles from './price-with-icon.module.css';\r\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\ninterface IPriceWithIcon {\r\n    price: number\r\n}\r\n\r\nconst PriceWithIcon: FC<IPriceWithIcon> = ({price}) => {\r\n    return (\r\n        <div className={priceWithIconStyles.wrapper}>\r\n            <p className=\"text text_type_digits-default\">{price}</p>\r\n            <CurrencyIcon type=\"primary\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PriceWithIcon;","import React, {FC} from 'react';\r\nimport imageCircleIngredientStyles from \"./image-circle-ingredient.module.css\";\r\n\r\ninterface IImageCircleIngredient {\r\n    image: string,\r\n    ingredientCount?: number,\r\n    index?: number\r\n}\r\n\r\nconst ImageCircleIngredient: FC<IImageCircleIngredient> = ({image, ingredientCount, index}) => {\r\n    const zIndex = index ? 10 - index : 11\r\n    return (\r\n        <div className={imageCircleIngredientStyles.wrapper} style={{zIndex: zIndex}}>\r\n            <img src={image} alt='ingredients_image'/>\r\n            {ingredientCount && (\r\n                <div className={imageCircleIngredientStyles.count_container}>\r\n                    <p className=\"text text_type_digits-default\">+{ingredientCount - 5}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageCircleIngredient;","import React, {FC} from 'react';\r\nimport feedOrderItemStyles from './feed-order-item.module.css';\r\nimport {getAmountByIngredientsId, getMobileImagesById} from \"../../services/selectors/ingredients-selectors\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport PriceWithIcon from \"../price-with-icon/price-with-icon\";\r\nimport ImageCircleIngredient from \"../image-circle-ingredient/image-circle-ingredient\";\r\nimport {convertStatusOrderFromRussian, getDate} from \"../../utils/service\";\r\nimport {ROUTE_FEED} from \"../../utils/const\";\r\nimport {IOrder} from \"../../models/i-order.types\";\r\nimport {useAppSelector} from \"../../hooks/redux\";\r\n\r\nconst FeedOrderItem: FC<IOrder> = ({\r\n                                       _id, ingredients, status, number,\r\n                                       createdAt, name\r\n                                   }) => {\r\n    const location: any = useLocation()\r\n    const amount = useAppSelector(state => getAmountByIngredientsId(state, ingredients))\r\n    const images = useAppSelector(state => getMobileImagesById(state, ingredients))\r\n    const ingredientCount = images.length\r\n    const imagesList = images.slice(0, 6).map((item, index) => {\r\n        if (index < 5) return (<ImageCircleIngredient key={index} image={item} index={index}/>)\r\n        return (<ImageCircleIngredient key={index}\r\n                                       image={item}\r\n                                       ingredientCount={ingredientCount}\r\n                                       index={index}/>)\r\n    })\r\n    return (\r\n        <div className={feedOrderItemStyles.wrapper}>\r\n            <section className={feedOrderItemStyles.order_header}>\r\n                <p className=\"text text_type_digits-default\">#{number}</p>\r\n                <p className=\"text text_type_main-small text_color_inactive\">{getDate(createdAt)}</p>\r\n            </section>\r\n            <section className={feedOrderItemStyles.order_name}>\r\n                <p className=\"text text_type_main-medium\">{name}</p>\r\n                {location.pathname !== ROUTE_FEED && (\r\n                    <p className=\"text text_type_main-small text_color_inactive\">\r\n                        {convertStatusOrderFromRussian(status)}\r\n                    </p>\r\n                )}\r\n            </section>\r\n            <section className={feedOrderItemStyles.order_description}>\r\n                <div className={feedOrderItemStyles.ingredients_images}>\r\n                    {imagesList}\r\n                </div>\r\n                <PriceWithIcon price={amount}/>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FeedOrderItem;","import {START_ORDERS_LISTENING, STOP_ORDERS_LISTENING} from \"../../utils/const\";\r\nimport {createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport api from \"../../http\";\r\n\r\nexport const startOrdersListening = (url: string) => ({type: START_ORDERS_LISTENING, payload: url})\r\nexport const stopOrdersListening = () => ({type: STOP_ORDERS_LISTENING})\r\nexport const fetchOrderInfo = createAsyncThunk(\r\n    'fetch_order_info',\r\n    async (orderNumber: number, ThunkAPI) => {\r\n        try {\r\n            return await api.getOrderInfo(orderNumber)\r\n        } catch (e) {\r\n            return ThunkAPI.rejectWithValue(e)\r\n        }\r\n    }\r\n)","import React, {useEffect} from 'react';\r\nimport ordersStyles from './orders.module.css'\r\nimport {getOrders} from \"../../services/selectors/order-selector\";\r\nimport FeedOrderItem from \"../../components/feed-order-item/feed-order-item\";\r\nimport {startOrdersListening, stopOrdersListening} from \"../../services/actions/order-action-creators\";\r\nimport {ACCESS_TOKEN, WS_USER_ORDERS} from \"../../utils/const\";\r\nimport {IOrder} from \"../../models/i-order.types\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\r\n\r\nconst Orders = () => {\r\n    const location: any = useLocation()\r\n    const accessToken: string | null = localStorage.getItem(ACCESS_TOKEN)\r\n    const dispatch = useAppDispatch()\r\n    useEffect(() => {\r\n        dispatch(startOrdersListening(`${WS_USER_ORDERS}?token=${accessToken}`));\r\n        return () => {\r\n            dispatch(stopOrdersListening())\r\n        }\r\n    }, [dispatch, accessToken])\r\n    const orders = useAppSelector(state => getOrders(state))\r\n    let ordersList\r\n    if (orders) {\r\n        ordersList = orders.map((item: IOrder) => {\r\n            return (\r\n                <Link\r\n                    className={ordersStyles.link}\r\n                    key={item._id}\r\n                    to={`${location.pathname}/${item.number}`}\r\n                    state={{backgroundLocation: location, from: location.pathname}}>\r\n                    <FeedOrderItem {...item}/>\r\n                </Link>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <div className={ordersStyles.wrapper}>\r\n            {ordersList}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Orders;","import React, {FC, ReactElement} from 'react';\r\nimport {Navigate, useLocation} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getIsAuth} from \"../../services/selectors/auth-selectors\";\r\nimport {ROUTE_MAIN} from \"../../utils/const\";\r\nimport {RootState} from \"../../services/store\";\r\n\r\ntype TProtectedUnauthorizedRoute ={\r\n    children: ReactElement\r\n}\r\nconst ProtectedUnauthorizedRoute: FC<TProtectedUnauthorizedRoute> = ({children}) => {\r\n    const location = useLocation()\r\n    const isAuth: boolean = useSelector((state: RootState) => getIsAuth(state))\r\n    if (isAuth) return (<Navigate to={ROUTE_MAIN} state={{from: location}}/>)\r\n    return children;\r\n};\r\n\r\nexport default ProtectedUnauthorizedRoute;","import React, {FC, ReactElement} from 'react';\r\nimport {useLocation, Navigate} from \"react-router-dom\";\r\nimport {getIsAuth} from \"../../services/selectors/auth-selectors\";\r\nimport {ROUTE_LOGIN} from \"../../utils/const\";\r\nimport {useAppSelector} from \"../../hooks/redux\";\r\n\r\ntype TProtectedAuthorizedRoute = {\r\n    children: ReactElement\r\n}\r\nconst ProtectedAuthorizedRoute: FC<TProtectedAuthorizedRoute> = ({children}) => {\r\n    const location = useLocation()\r\n    const isAuth = useAppSelector(state => getIsAuth(state))\r\n    if (!isAuth) return (<Navigate to={ROUTE_LOGIN} state={{from: location}}/>)\r\n    return children;\r\n};\r\n\r\nexport default ProtectedAuthorizedRoute;","import React, {FC, useEffect} from 'react';\r\nimport feedStyles from './feed.module.css';\r\nimport FeedOrderItem from \"../../components/feed-order-item/feed-order-item\";\r\nimport {startOrdersListening, stopOrdersListening} from \"../../services/actions/order-action-creators\";\r\nimport {\r\n    getNumbersOrdersInProcess,\r\n    getNumbersReadyOrders, getOrderError, getOrderIsLoading,\r\n    getOrders,\r\n    getTotal,\r\n    getTotalToday\r\n} from \"../../services/selectors/order-selector\";\r\nimport {WS_ALL_ORDERS} from \"../../utils/const\";\r\nimport {IOrder} from \"../../models/i-order.types\";\r\nimport ErrorMessage from \"../../components/error-message/error-message\";\r\nimport Preloader from \"../../components/preloader/preloader\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\r\n\r\nconst Feed: FC = () => {\r\n    const dispatch = useAppDispatch()\r\n    const location: any = useLocation()\r\n    useEffect(() => {\r\n        dispatch(startOrdersListening(WS_ALL_ORDERS));\r\n        return () => {\r\n            dispatch(stopOrdersListening())\r\n        }\r\n    }, [dispatch])\r\n    const error = useAppSelector(state => getOrderError(state))\r\n    const isLoading = useAppSelector(state => getOrderIsLoading(state))\r\n    const ordersInProcessNumbers = useAppSelector(state => getNumbersOrdersInProcess(state))\r\n    const inProgress = ordersInProcessNumbers.slice(0, 20).map((item: number) => {\r\n        return (<p className=\"text text_type_digits-default text_color_inactive\" key={item}>\r\n            {item}\r\n        </p>)\r\n    })\r\n    const ordersReadyNumbers = useAppSelector(state => getNumbersReadyOrders(state))\r\n    const isReady = ordersReadyNumbers.slice(0, 20).map((item: number, index: number) => {\r\n        return (<p className=\"text text_type_digits-default\" key={item}>\r\n            {item}\r\n        </p>)\r\n    })\r\n    const orders = useAppSelector(state => getOrders(state))\r\n    const totalOrders = useAppSelector(state => getTotal(state))\r\n    const totalTodayOrders = useAppSelector(state => getTotalToday(state))\r\n    if (error) return (<ErrorMessage errorMessage={error}/>)\r\n    if (isLoading) return (<Preloader/>)\r\n    const ordersList = orders.map((item: IOrder) => {\r\n        return (\r\n            <Link\r\n                className={feedStyles.link}\r\n                key={item._id}\r\n                to={`${location.pathname}/${item.number}`}\r\n                state={{backgroundLocation: location, from: location.pathname}}>\r\n                <FeedOrderItem key={item._id} {...item}/>\r\n            </Link>\r\n        )\r\n\r\n    })\r\n    return (\r\n        <div className={feedStyles.wrapper}>\r\n            <div className={feedStyles.content}>\r\n                <p className=\"text text_type_main-large\">Лента Заказов</p>\r\n                <div className={feedStyles.orders_container}>\r\n                    <section className={feedStyles.orders_items}>\r\n                        {orders && ordersList}\r\n                    </section>\r\n                    <section className={feedStyles.orders_info}>\r\n                        <div className={feedStyles.orders_tab}>\r\n                            <div>\r\n                                <p className=\"text text_type_main-medium\">Готовы:</p>\r\n                                <div className={feedStyles.orders_number_list}>\r\n                                    {isReady && isReady}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"text text_type_main-medium\">В работе:</p>\r\n                                <div className={feedStyles.orders_number_list}>\r\n                                    {inProgress && inProgress}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-15\">\r\n                            <div className={feedStyles.completed_order}>\r\n                                <p className=\"text text_type_digits-default\">Выполнено за всё время:</p>\r\n                                <p className=\"text text_type_digits-large\">{totalTodayOrders}</p>\r\n                            </div>\r\n                            <div className={feedStyles.completed_order}>\r\n                                <p className=\"text text_type_digits-default\">Выполнено за сегодня:</p>\r\n                                <p className=\"text text_type_digits-large\">{totalOrders}</p>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Feed;","import React, {FC} from 'react';\r\nimport ingredientItemInOrderInfoStyles from './ingredient-item-in-order-info.module.css';\r\nimport {getIngredientById} from \"../../services/selectors/ingredients-selectors\";\r\nimport {getCountIngredientsInCurrentOrder} from \"../../services/selectors/order-selector\";\r\nimport ImageCircleIngredient from \"../image-circle-ingredient/image-circle-ingredient\";\r\nimport PriceWithIcon from \"../price-with-icon/price-with-icon\";\r\nimport {useAppSelector} from \"../../hooks/redux\";\r\n\r\ninterface IIngredientItemInOrderInfo {\r\n    ingredientId: string | undefined,\r\n    orderId: string | undefined\r\n}\r\n\r\nconst IngredientItemInOrderInfo: FC<IIngredientItemInOrderInfo> = ({ingredientId, orderId}) => {\r\n    const ingredient = useAppSelector(state => getIngredientById(state, ingredientId))\r\n    const countInOrder = useAppSelector(state => getCountIngredientsInCurrentOrder(state, ingredientId))\r\n    return (\r\n        <div className={ingredientItemInOrderInfoStyles.wrapper}>\r\n            <ImageCircleIngredient image={ingredient.image_mobile}/>\r\n            <div>\r\n                <p className=\"text text_type_main-default ml-1\">{ingredient.name}</p>\r\n            </div>\r\n            <div className={ingredientItemInOrderInfoStyles.price}>\r\n                <p className=\"text text_type_digits-default mr-2\">{countInOrder} x</p>\r\n                <PriceWithIcon price={ingredient.price}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IngredientItemInOrderInfo;","import React, {FC} from 'react';\r\nimport orderInfoStyles from './order-info.module.css';\r\nimport PriceWithIcon from \"../price-with-icon/price-with-icon\";\r\nimport {getAmountByIngredientsId} from \"../../services/selectors/ingredients-selectors\";\r\nimport IngredientItemInOrderInfo from \"../ingredient-item-in-order-info/ingredient-item-in-order-info\";\r\nimport {convertStatusOrderFromRussian, getDate} from \"../../utils/service\";\r\nimport {IOrder} from \"../../models/i-order.types\";\r\nimport {useAppSelector} from \"../../hooks/redux\";\r\n\r\ninterface IOrderInfo {\r\n    order: IOrder\r\n}\r\n\r\nconst OrderInfo: FC<IOrderInfo> = ({order}) => {\r\n    const amount = useAppSelector(state => getAmountByIngredientsId(state, order.ingredients))\r\n    let ingredients = new Set(order.ingredients)\r\n    const ingredientsList = Array.from(ingredients).map(item => <IngredientItemInOrderInfo key={item}\r\n                                                                                           ingredientId={item}\r\n                                                                                           orderId={order._id}/>)\r\n    return (\r\n        <div className={orderInfoStyles.wrapper}>\r\n            <div className={orderInfoStyles.content}>\r\n                <div className={orderInfoStyles.number}>\r\n                    <p className=\"text text_type_digits-default\">#{order.number}</p>\r\n                </div>\r\n                <div className={orderInfoStyles.name}>\r\n                    <p className=\"text text_type_main-medium\">{order.name}</p>\r\n                </div>\r\n                <div className={orderInfoStyles.status}>\r\n                    <p className=\"text text_type_digits-small text_color_inactive\">\r\n                        {convertStatusOrderFromRussian(order.status)}\r\n                    </p>\r\n                </div>\r\n                <p className=\"text text_type_main-medium mt-15\">Состав:</p>\r\n                <div className={orderInfoStyles.ingredients}>\r\n                    {ingredientsList}\r\n                </div>\r\n                <div className={orderInfoStyles.footer}>\r\n                    <p className=\"text text_type_main-small text_color_inactive\">{getDate(order.createdAt)}</p>\r\n                    <PriceWithIcon price={amount}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderInfo;","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {IOrder} from \"../../models/i-order.types\";\r\nimport {fetchOrderInfo} from \"../actions/order-action-creators\";\r\n\r\nexport interface ISetOrdersPayload {\r\n    orders: IOrder[],\r\n    total: number,\r\n    totalToday: number,\r\n}\r\ninterface IOrderState {\r\n    total: number,\r\n    totalToday: number,\r\n    orders: IOrder[],\r\n    currentOrder: IOrder| null,\r\n    isWsConnecting: boolean,\r\n    error: string,\r\n    isLoading: boolean\r\n}\r\n\r\nexport const initialState: IOrderState = {\r\n    total: 0,\r\n    totalToday: 0,\r\n    orders: [],\r\n    currentOrder: null,\r\n    isWsConnecting: false,\r\n    error: '',\r\n    isLoading: false\r\n};\r\n\r\nexport const OrderSlice = createSlice({\r\n    name: 'order',\r\n    initialState,\r\n    reducers: {\r\n        startConnecting: (state) => {\r\n            state.isWsConnecting = true\r\n            state.error = ''\r\n        },\r\n        stopConnecting: (state) => {\r\n            state.isWsConnecting = false\r\n        },\r\n        setError: (state, action: PayloadAction<string>) => {\r\n            state.error = action.payload\r\n        },\r\n        setOrders: (state, action: PayloadAction<ISetOrdersPayload>) => {\r\n            state.error = ''\r\n            state.total = action.payload.total\r\n            state.totalToday = action.payload.totalToday\r\n            state.orders = action.payload.orders\r\n        },\r\n        cleanOrders: (state) => {\r\n            state.orders = []\r\n            state.total = 0\r\n            state.totalToday = 0\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchOrderInfo.fulfilled.type]: (state, action: PayloadAction<IOrder>) => {\r\n            state.currentOrder = action.payload;\r\n            state.isLoading = false\r\n        },\r\n        [fetchOrderInfo.pending.type]: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        [fetchOrderInfo.rejected.type]: (state, action: PayloadAction<string>) => {\r\n            state.currentOrder = null;\r\n            state.isLoading = false;\r\n            state.error = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const orderActions = OrderSlice.actions;\r\nexport default OrderSlice.reducer;\r\n","import React, {FC, useEffect} from 'react';\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport feedOrderDetailsStyles from './feed-order-details.module.css'\r\nimport OrderInfo from \"../../components/order-info/order-info\";\r\nimport Modal from \"../../components/modal/modal\";\r\nimport {getCurrentNumber, getOrderIsLoading} from \"../../services/selectors/order-selector\";\r\nimport {fetchOrderInfo} from \"../../services/actions/order-action-creators\";\r\nimport {orderActions} from \"../../services/reducers/order-slice\";\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\r\n\r\nconst FeedOrderDetails: FC = () => {\r\n    const dispatch = useAppDispatch()\r\n    const location: any = useLocation()\r\n    const navigate = useNavigate()\r\n    const params = useParams()\r\n    const isLoading = useAppSelector(state => getOrderIsLoading(state))\r\n    let order = useAppSelector(state => getCurrentNumber(state))\r\n    useEffect(() => {\r\n        if (params && params.id) dispatch(fetchOrderInfo(+params.id))\r\n        return () => {\r\n            dispatch(orderActions.cleanOrders)\r\n        }\r\n    }, [dispatch, params])\r\n    const closeOrderDetails = () => {\r\n        navigate(location.state.from)\r\n    }\r\n    if (isLoading || !order) return (<div></div>)\r\n    if (location.state && location.state.from) {\r\n        return (\r\n            <Modal closeModal={closeOrderDetails}>\r\n                <OrderInfo order={order}/>\r\n            </Modal>\r\n        )\r\n    }\r\n    return (\r\n        <div className={feedOrderDetailsStyles.wrapper}>\r\n            <OrderInfo order={order}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FeedOrderDetails;","import React, {useEffect} from 'react';\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport Preloader from \"../preloader/preloader\";\r\nimport ErrorMessage from \"../error-message/error-message\";\r\nimport {fetchIngredients} from \"../../services/actions/ingredients-action-creators\";\r\nimport {getCartErrorMessage, getIsCartLoading, getIsShowOrderDetails} from \"../../services/selectors/cart-selectors\";\r\nimport {\r\n    getIngredientsErrorMessage,\r\n    getIsIngredientsLoading,\r\n} from \"../../services/selectors/ingredients-selectors\";\r\nimport {Routes, Route, useLocation} from \"react-router-dom\";\r\nimport NotFoundPage from \"../../pages/not-found-page/not-found-page\";\r\nimport {\r\n    ROUTE_FEED,\r\n    ROUTE_FORGOT_PASSWORD,\r\n    ROUTE_INGREDIENTS,\r\n    ROUTE_LOGIN,\r\n    ROUTE_MAIN, ROUTE_ORDERS,\r\n    ROUTE_PROFILE,\r\n    ROUTE_REGISTER,\r\n    ROUTE_RESET_PASSWORD\r\n} from \"../../utils/const\";\r\nimport appStyles from './app.module.css'\r\nimport Main from \"../../pages/main/main\";\r\nimport Ingredients from \"../../pages/ingredients/ingredients\";\r\nimport ResetPassword from \"../../pages/reset-password/reset-password\";\r\nimport ForgotPassword from \"../../pages/forgot-password/forgot-password\";\r\nimport Profile from \"../../pages/profile/profile\";\r\nimport Auth from \"../../pages/auth/auth\";\r\nimport {fetchCheckAuth} from \"../../services/actions/auth-action-creators\";\r\nimport ProfileInfo from \"../../pages/profile-info/profile-info\";\r\nimport Orders from \"../../pages/orders/orders\";\r\nimport ProtectedUnauthorizedRoute from \"../hoc/protected-unauthorized-route\";\r\nimport ProtectedAuthorizedRoute from \"../hoc/protected-authorized-route\";\r\nimport Feed from \"../../pages/feed/feed\";\r\nimport FeedOrderDetails from \"../../pages/feed-order-details/feed-order-details\";\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\r\n\r\nconst App = () => {\r\n    const dispatch = useAppDispatch()\r\n    let location = useLocation();\r\n    let state = location.state as { backgroundLocation?: Location };\r\n    const isShowOrderDetails = useAppSelector(state => getIsShowOrderDetails(state))\r\n    const isIngredientsLoading = useAppSelector(state => getIsIngredientsLoading(state))\r\n    const isCartLoading = useAppSelector(state => getIsCartLoading(state))\r\n    const ingredientsErrorMessage = useAppSelector(state=> getIngredientsErrorMessage(state))\r\n    const cartErrorMessage = useAppSelector(state => getCartErrorMessage(state))\r\n    useEffect(() => {\r\n        dispatch(fetchIngredients())\r\n        dispatch(fetchCheckAuth())\r\n    }, [dispatch])\r\n    if (isIngredientsLoading || isCartLoading) return (<Preloader/>)\r\n    if (ingredientsErrorMessage) return (<ErrorMessage errorMessage={ingredientsErrorMessage}/>)\r\n    if (cartErrorMessage) return (<ErrorMessage errorMessage={cartErrorMessage}/>)\r\n    return (\r\n        <div className={appStyles.wrapper}>\r\n            <AppHeader/>\r\n            <Routes location={state?.backgroundLocation || location}>\r\n                <Route path={ROUTE_MAIN} element={<Main/>}/>\r\n                <Route path={ROUTE_LOGIN} element={<Auth/>}/>\r\n                <Route path={ROUTE_REGISTER} element={<Auth/>}/>\r\n                <Route path={ROUTE_FEED} element={<Feed/>}/>\r\n                <Route path={ROUTE_FEED + '/:id'} element={<FeedOrderDetails/>}/>\r\n                <Route path={ROUTE_INGREDIENTS + '/:id'} element={<Ingredients/>}/>\r\n                <Route path={ROUTE_PROFILE} element={\r\n                    <ProtectedAuthorizedRoute>\r\n                        <Profile/>\r\n                    </ProtectedAuthorizedRoute>\r\n                }>\r\n                    <Route path=\"\" element={<ProfileInfo/>}/>\r\n                    <Route path={ROUTE_ORDERS} element={<Orders/>}/>\r\n                </Route>\r\n                <Route path={ROUTE_RESET_PASSWORD} element={\r\n                    <ProtectedUnauthorizedRoute>\r\n                        <ResetPassword/>\r\n                    </ ProtectedUnauthorizedRoute>\r\n                }/>\r\n                <Route path={ROUTE_FORGOT_PASSWORD} element={\r\n                    <ProtectedUnauthorizedRoute>\r\n                        <ForgotPassword/>\r\n                    </ ProtectedUnauthorizedRoute>\r\n                }/>\r\n                <Route path={ROUTE_PROFILE + '/' + ROUTE_ORDERS + '/:id'} element={\r\n                    <ProtectedAuthorizedRoute>\r\n                        <FeedOrderDetails/>\r\n                    </ProtectedAuthorizedRoute>\r\n                }/>\r\n                <Route path=\"*\" element={<NotFoundPage/>}/>\r\n            </Routes>\r\n            {state?.backgroundLocation && (\r\n                <Routes>\r\n                    <Route path={ROUTE_FEED + '/:id'} element={<FeedOrderDetails/>} />\r\n                    <Route path={ROUTE_INGREDIENTS + '/:id'} element={<Ingredients/>}/>\r\n                    <Route path={ROUTE_PROFILE + '/' + ROUTE_ORDERS + '/:id'} element={\r\n                        <ProtectedAuthorizedRoute>\r\n                            <FeedOrderDetails/>\r\n                        </ProtectedAuthorizedRoute>\r\n                    }/>\r\n                </Routes>\r\n            )}\r\n            {isShowOrderDetails && (<OrderDetails/>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {ReportHandler} from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {IIngredient} from '../../models/i-ingredient.types';\r\nimport {fetchIngredients} from '../actions/ingredients-action-creators';\r\n\r\ninterface IngredientsState {\r\n  ingredients: IIngredient[];\r\n  isLoading: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport const initialState: IngredientsState = {\r\n  ingredients: [],\r\n  isLoading: true,\r\n  errorMessage: '',\r\n};\r\nconst IngredientsSlice = createSlice({\r\n  name: 'ingredients',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchIngredients.fulfilled.type]: (state, action: PayloadAction<IIngredient[]>) => {\r\n      state.ingredients = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [fetchIngredients.pending.type]: (state) => {\r\n      state.isLoading = true;\r\n      state.errorMessage = '';\r\n    },\r\n    [fetchIngredients.rejected.type]: (state, action: PayloadAction<string>) => {\r\n      state.ingredients = [];\r\n      state.isLoading = false;\r\n      state.errorMessage = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default IngredientsSlice.reducer;\r\n","import {orderActions} from \"../reducers/order-slice\";\r\nimport {CONNECT_ERROR_MESSAGE, START_ORDERS_LISTENING, STOP_ORDERS_LISTENING} from \"../../utils/const\";\r\nimport {AnyAction, Dispatch, MiddlewareAPI} from \"redux\";\r\n\r\n//Вариант типизации MiddlewareAPI<AppDispatch, RootState> не проходит, выпадает ошибка типизации\r\n//Вроде бы, Middleware у меня один\r\nexport const ordersMiddleware = (store: MiddlewareAPI) => {\r\n    let ws: WebSocket | null = null\r\n    const {dispatch} = store\r\n    const onOpen = () => {\r\n        dispatch(orderActions.startConnecting)\r\n    };\r\n    const onClose = () => {\r\n        dispatch(orderActions.stopConnecting)\r\n    };\r\n    const onMessage = (event: MessageEvent) => {\r\n        dispatch(orderActions.setOrders(JSON.parse(event.data)))\r\n    }\r\n    const onError = () => {\r\n        dispatch(orderActions.setError(CONNECT_ERROR_MESSAGE))\r\n    }\r\n    return (next: Dispatch) => (action: AnyAction) => {\r\n        switch (action.type) {\r\n            case START_ORDERS_LISTENING:\r\n                if (ws) ws.close();\r\n                ws = new WebSocket(action.payload);\r\n                ws.onopen = onOpen\r\n                ws.onmessage = (e: MessageEvent) => onMessage(e)\r\n                ws.onclose = onClose\r\n                ws.onerror = () => onError()\r\n                break\r\n            case STOP_ORDERS_LISTENING:\r\n                if (ws) ws.close();\r\n                ws = null\r\n                break\r\n        }\r\n        next(action)\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport {configureStore} from '@reduxjs/toolkit';\r\nimport ingredientsReducer from './reducers/ingredients-slice';\r\nimport cartReducer from './reducers/cart-slice';\r\nimport AuthReducer from './reducers/auth-slice';\r\nimport OrderReducer from './reducers/order-slice';\r\nimport {ordersMiddleware} from './middleware/orders-middleware';\r\n\r\nconst rootReducer = combineReducers({\r\n  ingredients: ingredientsReducer,\r\n  cart: cartReducer,\r\n  auth: AuthReducer,\r\n  order: OrderReducer\r\n});\r\nexport const setupStore = () => {\r\n  return configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware().concat(ordersMiddleware)\r\n\r\n  });\r\n};\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type AppStore = ReturnType<typeof setupStore>;\r\nexport type AppDispatch = AppStore['dispatch'];\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {setupStore} from './services/store';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter basename=\"/react-burger/\">\r\n            <Provider store={setupStore()}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"feed_wrapper__32SVt\",\"content\":\"feed_content__1g6tB\",\"orders_container\":\"feed_orders_container__2Kgjr\",\"orders_items\":\"feed_orders_items__3wXAG\",\"orders_info\":\"feed_orders_info__1r-Fl\",\"orders_tab\":\"feed_orders_tab__oVS64\",\"orders_number_list\":\"feed_orders_number_list___AQNY\",\"completed_order\":\"feed_completed_order__eLUm3\",\"link\":\"feed_link__2-p7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"profile_wrapper__31YoG\",\"content\":\"profile_content__14acI\",\"navigation\":\"profile_navigation__1gZeP\",\"link\":\"profile_link__3Q5Xf\",\"active\":\"profile_active__3zjoN\",\"hint\":\"profile_hint__1jivq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"burger-constructor_wrapper__KD2LA\",\"order_wrapper\":\"burger-constructor_order_wrapper__5uU8H\",\"order_items\":\"burger-constructor_order_items__3GKnr\",\"order_item\":\"burger-constructor_order_item__1BaTD\",\"create_order_section\":\"burger-constructor_create_order_section__J_VE-\",\"icon_section\":\"burger-constructor_icon_section__1wY-P\",\"canDrop\":\"burger-constructor_canDrop__3A5rV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"forgot-password_wrapper__3r5Pn\",\"hint\":\"forgot-password_hint__11wFo\",\"link\":\"forgot-password_link__D8yUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient-info_container__3-dnP\",\"img_section\":\"ingredient-info_img_section__391O4\",\"details_section\":\"ingredient-info_details_section__3wyXA\",\"details_item\":\"ingredient-info_details_item__15e2L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"order-info_wrapper__ZXbPs\",\"content\":\"order-info_content__Ou921\",\"number\":\"order-info_number__1Ic1q\",\"name\":\"order-info_name__1oNOD\",\"status\":\"order-info_status__3p1IF\",\"ingredients\":\"order-info_ingredients__1MXh-\",\"footer\":\"order-info_footer__2JLcE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ingredient-card_wrapper__2mjrO\",\"image_section\":\"ingredient-card_image_section__36sN4\",\"price_section\":\"ingredient-card_price_section__2FZzK\",\"count_section\":\"ingredient-card_count_section__31kPi\",\"dragging\":\"ingredient-card_dragging__1a8vd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"auth_wrapper__3Vc9A\",\"hint\":\"auth_hint__1KsVa\",\"link\":\"auth_link__3kbvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"feed-order-item_wrapper__2R4Vq\",\"order_header\":\"feed-order-item_order_header__3WQfi\",\"order_name\":\"feed-order-item_order_name__2Iloj\",\"order_description\":\"feed-order-item_order_description__g16-s\",\"ingredients_images\":\"feed-order-item_ingredients_images__jZMOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_section\":\"profile-info_input_section__1ulMO\",\"button_section\":\"profile-info_button_section__LMm20\",\"show\":\"profile-info_show__1lr5R\",\"cancel_button\":\"profile-info_cancel_button__358u0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"order-details_wrapper__2uRf6\",\"order_number\":\"order-details_order_number__39yG5\",\"done_section\":\"order-details_done_section__uvGwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"modal_content__1i5C_\",\"title\":\"modal_title__1QJP4\",\"close_section\":\"modal_close_section__1nkg2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"not-found-page_wrapper__1cAJc\",\"black_hole\":\"not-found-page_black_hole__MQkSN\",\"description\":\"not-found-page_description__3anp1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"burger-ingredients_wrapper__2VwB5\",\"menu\":\"burger-ingredients_menu__jZ6T0\",\"ingredients_wrapper\":\"burger-ingredients_ingredients_wrapper__2PKPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"constructor-empty_wrapper__2ing1\",\"description\":\"constructor-empty_description__19jH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filling_item\":\"constructor-not-bun-ingredient_filling_item__25yxy\",\"drag\":\"constructor-not-bun-ingredient_drag__QhKJ6\",\"can_drop\":\"constructor-not-bun-ingredient_can_drop__3BY4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"autch-error_wrapper__3hSDs\",\"show\":\"autch-error_show__AykRF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"orders_wrapper__dx71l\",\"link\":\"orders_link__FYNF_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"image-circle-ingredient_wrapper__38AmQ\",\"count_container\":\"image-circle-ingredient_count_container__219UL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ingredient-item-in-order-info_wrapper__36tSk\",\"price\":\"ingredient-item-in-order-info_price__Az2Vf\"};"],"sourceRoot":""}